{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReEnhancedFlag, ReFrag } from '../../render';\r\nimport { BaseOperation } from './base';\r\nimport { Fragment } from \"../../../domain/entities\";\r\nimport { OperationType } from './OperationType';\r\n// todo: separate classes: now here is circular dependency in `invert` method\r\nclass FragmentAdd extends BaseOperation {\r\n    frid;\r\n    constructor(fragmentId) {\r\n        super(OperationType.FRAGMENT_ADD);\r\n        this.frid = typeof fragmentId === 'undefined' ? null : fragmentId;\r\n    }\r\n    execute(restruct) {\r\n        const struct = restruct.molecule;\r\n        const frag = new Fragment();\r\n        if (this.frid === null) {\r\n            this.frid = struct.frags.add(frag);\r\n        }\r\n        else {\r\n            struct.frags.set(this.frid, frag);\r\n        }\r\n        restruct.frags.set(this.frid, new ReFrag(frag)); // TODO add restruct.notifyFragmentAdded\r\n        restruct.enhancedFlags.set(this.frid, new ReEnhancedFlag());\r\n    }\r\n    invert() {\r\n        return new FragmentDelete(this.frid);\r\n    }\r\n}\r\nclass FragmentDelete extends BaseOperation {\r\n    frid;\r\n    constructor(fragmentId) {\r\n        super(OperationType.FRAGMENT_DELETE, 100);\r\n        this.frid = fragmentId;\r\n    }\r\n    execute(restruct) {\r\n        const struct = restruct.molecule;\r\n        if (!struct.frags.get(this.frid)) {\r\n            return;\r\n        }\r\n        BaseOperation.invalidateItem(restruct, 'frags', this.frid, 1);\r\n        restruct.frags.delete(this.frid);\r\n        struct.frags.delete(this.frid); // TODO add restruct.notifyFragmentRemoved\r\n        const enhancedFalg = restruct.enhancedFlags.get(this.frid);\r\n        if (!enhancedFalg)\r\n            return;\r\n        restruct.clearVisel(enhancedFalg.visel);\r\n        restruct.enhancedFlags.delete(this.frid);\r\n    }\r\n    invert() {\r\n        return new FragmentAdd(this.frid);\r\n    }\r\n}\r\nexport { FragmentAdd, FragmentDelete };\r\n//# sourceMappingURL=fragment.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts"],"map":"{\"version\":3,\"file\":\"fragment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/operations/fragment.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,cAAc,EAAE,MAAM,EAAY,MAAM,cAAc,CAAA;AAE/D,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAA;AACtC,OAAO,EAAE,QAAQ,EAAE,iCAAuB;AAC1C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAE/C,6EAA6E;AAE7E,MAAM,WAAY,SAAQ,aAAa;IACrC,IAAI,CAAK;IAET,YAAY,UAAgB;QAC1B,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,OAAO,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAA;IACnE,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAChC,MAAM,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAA;QAE3B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;SACnC;aAAM;YACL,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAClC;QAED,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA,CAAC,wCAAwC;QACxF,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,cAAc,EAAE,CAAC,CAAA;IAC7D,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACtC,CAAC;CACF;AAED,MAAM,cAAe,SAAQ,aAAa;IACxC,IAAI,CAAK;IAET,YAAY,UAAe;QACzB,KAAK,CAAC,aAAa,CAAC,eAAe,EAAE,GAAG,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA;IACxB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChC,OAAM;SACP;QAED,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;QAC7D,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAChC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAC,0CAA0C;QAEzE,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC1D,IAAI,CAAC,YAAY;YAAE,OAAM;QACzB,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;QACvC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC1C,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACnC,CAAC;CACF;AAED,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/fragment.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReStruct } from '../../render';\r\nimport { BaseOperation } from './base';\r\ndeclare class FragmentAdd extends BaseOperation {\r\n    frid: any;\r\n    constructor(fragmentId?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): FragmentDelete;\r\n}\r\ndeclare class FragmentDelete extends BaseOperation {\r\n    frid: any;\r\n    constructor(fragmentId: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): FragmentAdd;\r\n}\r\nexport { FragmentAdd, FragmentDelete };\r\n"}}

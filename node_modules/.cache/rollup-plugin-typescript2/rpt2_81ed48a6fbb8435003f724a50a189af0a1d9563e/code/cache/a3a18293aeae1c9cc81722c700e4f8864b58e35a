{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReRxnPlus } from '../../../../render';\r\nimport { RxnPlus, Vec2 } from \"../../../../../domain/entities\";\r\nimport { BaseOperation } from '../../base';\r\nimport { OperationType } from '../../OperationType';\r\nclass RxnPlusAdd extends BaseOperation {\r\n    data;\r\n    constructor(pos) {\r\n        super(OperationType.RXN_PLUS_ADD);\r\n        this.data = { plid: null, pos };\r\n    }\r\n    execute(restruct) {\r\n        const struct = restruct.molecule;\r\n        const newRxn = new RxnPlus();\r\n        if (typeof this.data.plid === 'number') {\r\n            struct.rxnPluses.set(this.data.plid, newRxn);\r\n        }\r\n        else {\r\n            this.data.plid = struct.rxnPluses.add(newRxn);\r\n        }\r\n        const { pos, plid } = this.data;\r\n        const structRxn = struct.rxnPluses.get(plid);\r\n        // notifyRxnPlusAdded\r\n        restruct.rxnPluses.set(plid, new ReRxnPlus(structRxn));\r\n        struct.rxnPlusSetPos(plid, new Vec2(pos));\r\n        BaseOperation.invalidateItem(restruct, 'rxnPluses', plid, 1);\r\n    }\r\n    invert() {\r\n        const inverted = new RxnPlusDelete();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nclass RxnPlusDelete extends BaseOperation {\r\n    data;\r\n    constructor(plid) {\r\n        super(OperationType.RXN_PLUS_DELETE);\r\n        this.data = { plid, pos: null };\r\n    }\r\n    execute(restruct) {\r\n        const { plid } = this.data;\r\n        const struct = restruct.molecule;\r\n        if (!this.data.pos) {\r\n            this.data.pos = struct.rxnPluses.get(plid).pp;\r\n        }\r\n        // notifyRxnPlusRemoved\r\n        restruct.markItemRemoved();\r\n        const rxn = restruct.rxnPluses.get(plid);\r\n        if (!rxn)\r\n            return;\r\n        restruct.clearVisel(rxn.visel);\r\n        restruct.rxnPluses.delete(plid);\r\n        struct.rxnPluses.delete(plid);\r\n    }\r\n    invert() {\r\n        const inverted = new RxnPlusAdd();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nexport { RxnPlusAdd, RxnPlusDelete };\r\nexport * from './RxnPlusMove';\r\n//# sourceMappingURL=index.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/rxn/plus/RxnPlusMove.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../src/application/editor/operations/rxn/plus/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/rxn/plus/index.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReStruct } from '../../../../render';\r\nimport { BaseOperation } from '../../base';\r\ndeclare type Data = {\r\n    plid: any;\r\n    pos: any;\r\n};\r\ndeclare class RxnPlusAdd extends BaseOperation {\r\n    data: Data;\r\n    constructor(pos?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): RxnPlusDelete;\r\n}\r\ndeclare class RxnPlusDelete extends BaseOperation {\r\n    data: Data;\r\n    constructor(plid?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): RxnPlusAdd;\r\n}\r\nexport { RxnPlusAdd, RxnPlusDelete };\r\nexport * from './RxnPlusMove';\r\n"}}

{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Smiles } from './smiles';\r\nexport class SmiSerializer {\r\n    static DefaultOptions = {\r\n        ignoreErrors: false\r\n    };\r\n    options;\r\n    constructor(options) {\r\n        this.options = { ...SmiSerializer.DefaultOptions, ...options };\r\n    }\r\n    deserialize(_content) {\r\n        throw new Error('Not implemented yet.');\r\n    }\r\n    serialize(struct) {\r\n        return new Smiles().saveMolecule(struct, this.options.ignoreErrors);\r\n    }\r\n}\r\n//# sourceMappingURL=smiSerializer.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/serializers/serializers.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/serializers/smi/smi.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/serializers/smi/smiles.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts"],"map":"{\"version\":3,\"file\":\"smiSerializer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/domain/serializers/smi/smiSerializer.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAI7E,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AAGjC,MAAM,OAAO,aAAa;IACxB,MAAM,CAAC,cAAc,GAAyB;QAC5C,YAAY,EAAE,KAAK;KACpB,CAAA;IAEgB,OAAO,CAAsB;IAE9C,YAAY,OAAuC;QACjD,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,aAAa,CAAC,cAAc,EAAE,GAAG,OAAO,EAAE,CAAA;IAChE,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;IACzC,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO,IAAI,MAAM,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IACrE,CAAC\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/serializers/smi/smiSerializer.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Serializer } from '../serializers.types';\r\nimport { SmiSerializerOptions } from './smi.types';\r\nimport { Struct } from \"../../entities\";\r\nexport declare class SmiSerializer implements Serializer<Struct> {\r\n    static DefaultOptions: SmiSerializerOptions;\r\n    private readonly options;\r\n    constructor(options?: Partial<SmiSerializerOptions>);\r\n    deserialize(_content: string): Struct;\r\n    serialize(struct: Struct): string;\r\n}\r\n"}}

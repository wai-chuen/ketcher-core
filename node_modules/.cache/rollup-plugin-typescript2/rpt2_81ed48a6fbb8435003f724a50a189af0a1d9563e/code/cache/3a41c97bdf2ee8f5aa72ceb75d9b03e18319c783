{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ChemicalMimeType } from \"../../domain/services\";\r\nimport { SupportedFormatProperties } from './supportedFormatProperties';\r\nconst formatProperties = {\r\n    molAuto: new SupportedFormatProperties(\r\n    // TODO: is it a valid name?\r\n    'MDL Molfile Auto Format detect', ChemicalMimeType.Mol, ['.mol'], true, { 'molfile-saving-mode': 'auto' }),\r\n    mol: new SupportedFormatProperties('MDL Molfile V2000', ChemicalMimeType.Mol, ['.mol'], true),\r\n    molV3000: new SupportedFormatProperties('MDL Molfile V3000', ChemicalMimeType.Mol, ['.mol'], true, { 'molfile-saving-mode': '3000' }),\r\n    rxn: new SupportedFormatProperties('MDL Rxnfile V2000', ChemicalMimeType.Rxn, ['.rxn'], true),\r\n    rxnV3000: new SupportedFormatProperties('MDL Rxnfile V3000', ChemicalMimeType.Rxn, ['.rxn'], true, { 'molfile-saving-mode': '3000' }),\r\n    smiles: new SupportedFormatProperties('Daylight SMILES', ChemicalMimeType.DaylightSmiles, ['.smi', '.smiles']),\r\n    smilesExt: new SupportedFormatProperties('Extended SMILES', ChemicalMimeType.ExtendedSmiles, ['.cxsmi', '.cxsmiles']),\r\n    smarts: new SupportedFormatProperties('Daylight SMARTS', ChemicalMimeType.DaylightSmarts, ['.smarts']),\r\n    inChI: new SupportedFormatProperties('InChI', ChemicalMimeType.InChI, [\r\n        '.inchi'\r\n    ]),\r\n    inChIAuxInfo: new SupportedFormatProperties('InChI AuxInfo', ChemicalMimeType.InChIAuxInfo, ['.inchi']),\r\n    cml: new SupportedFormatProperties('CML', ChemicalMimeType.CML, ['.cml', '.mrv'], true),\r\n    ket: new SupportedFormatProperties('Ket Format', ChemicalMimeType.KET, [\r\n        '.ket'\r\n    ]),\r\n    cdxml: new SupportedFormatProperties('CDXML', ChemicalMimeType.CDXML, ['.cdxml'], true),\r\n    cdx: new SupportedFormatProperties('Base64 CDX', ChemicalMimeType.CDX, ['.b64cdx'], true),\r\n    binaryCdx: new SupportedFormatProperties('CDX', ChemicalMimeType.CDX, ['.cdx'], true),\r\n    unknown: new SupportedFormatProperties('Unknown', ChemicalMimeType.UNKNOWN, ['.'], true)\r\n};\r\nconst imgFormatProperties = {\r\n    svg: { extension: '.svg', name: 'SVG Document' },\r\n    png: { extension: '.png', name: 'PNG Image' }\r\n};\r\nfunction getPropertiesByImgFormat(format) {\r\n    return imgFormatProperties[format];\r\n}\r\nfunction getPropertiesByFormat(format) {\r\n    return formatProperties[format];\r\n}\r\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat };\r\n//# sourceMappingURL=formatProperties.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/services/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/formatters/structFormatter.types.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/formatters/supportedFormatProperties.ts"],"map":"{\"version\":3,\"file\":\"formatProperties.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/application/formatters/formatProperties.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/formatters/formatProperties.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { SupportedFormat } from './structFormatter.types';\r\nimport { SupportedFormatProperties } from './supportedFormatProperties';\r\ndeclare type FormatPropertiesMap = {\r\n    [key in SupportedFormat]: SupportedFormatProperties;\r\n};\r\ndeclare const formatProperties: FormatPropertiesMap;\r\ndeclare function getPropertiesByImgFormat(format: any): any;\r\ndeclare function getPropertiesByFormat(format: SupportedFormat): SupportedFormatProperties;\r\nexport { formatProperties, getPropertiesByFormat, getPropertiesByImgFormat };\r\n"}}

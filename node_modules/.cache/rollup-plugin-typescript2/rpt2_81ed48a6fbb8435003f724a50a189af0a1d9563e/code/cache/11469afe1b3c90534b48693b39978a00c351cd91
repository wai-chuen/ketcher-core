{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Box2Abs, SimpleObjectMode, Vec2 } from \"../../../domain/entities\";\r\nimport { LayerMap } from './generalEnumTypes';\r\nimport ReObject from './reobject';\r\nimport { Scale } from \"../../../domain/helpers\";\r\nimport draw from '../draw';\r\nimport util from '../util';\r\nconst tfx = util.tfx;\r\nclass ReSimpleObject extends ReObject {\r\n    item;\r\n    constructor(simpleObject) {\r\n        super('simpleObject');\r\n        this.item = simpleObject;\r\n    }\r\n    static isSelectable() {\r\n        return true;\r\n    }\r\n    calcDistance(p, s) {\r\n        const point = new Vec2(p.x, p.y);\r\n        const distRef = this.getReferencePointDistance(p);\r\n        const item = this.item;\r\n        const mode = item.mode;\r\n        const pos = item.pos;\r\n        let dist;\r\n        switch (mode) {\r\n            case SimpleObjectMode.ellipse: {\r\n                const rad = Vec2.diff(pos[1], pos[0]);\r\n                const rx = rad.x / 2;\r\n                const ry = rad.y / 2;\r\n                const center = Vec2.sum(pos[0], new Vec2(rx, ry));\r\n                const pointToCenter = Vec2.diff(point, center);\r\n                if (rx !== 0 && ry !== 0) {\r\n                    dist = Math.abs(1 -\r\n                        (pointToCenter.x * pointToCenter.x) / (rx * rx) -\r\n                        (pointToCenter.y * pointToCenter.y) / (ry * ry));\r\n                }\r\n                else {\r\n                    // in case rx or ry is equal to 0 we have a line as a trivial case of ellipse\r\n                    // in such case distance need to be calculated as a distance between line and current point\r\n                    dist = calculateDistanceToLine(pos, point);\r\n                }\r\n                break;\r\n            }\r\n            case SimpleObjectMode.rectangle: {\r\n                const topX = Math.min(pos[0].x, pos[1].x);\r\n                const topY = Math.min(pos[0].y, pos[1].y);\r\n                const bottomX = Math.max(pos[0].x, pos[1].x);\r\n                const bottomY = Math.max(pos[0].y, pos[1].y);\r\n                const distances = [];\r\n                if (point.x >= topX && point.x <= bottomX) {\r\n                    if (point.y < topY) {\r\n                        distances.push(topY - point.y);\r\n                    }\r\n                    else if (point.y > bottomY) {\r\n                        distances.push(point.y - bottomY);\r\n                    }\r\n                    else {\r\n                        distances.push(point.y - topY, bottomY - point.y);\r\n                    }\r\n                }\r\n                if (point.x < topX && point.y < topY) {\r\n                    distances.push(Vec2.dist(new Vec2(topX, topY), point));\r\n                }\r\n                if (point.x > bottomX && point.y > bottomY) {\r\n                    distances.push(Vec2.dist(new Vec2(bottomX, bottomY), point));\r\n                }\r\n                if (point.x < topX && point.y > bottomY) {\r\n                    distances.push(Vec2.dist(new Vec2(topX, bottomY), point));\r\n                }\r\n                if (point.x > bottomX && point.y < topY) {\r\n                    distances.push(Vec2.dist(new Vec2(bottomX, topY), point));\r\n                }\r\n                if (point.y >= topY && point.y <= bottomY) {\r\n                    if (point.x < topX) {\r\n                        distances.push(topX - point.x);\r\n                    }\r\n                    else if (point.x > bottomX) {\r\n                        distances.push(point.x - bottomX);\r\n                    }\r\n                    else {\r\n                        distances.push(point.x - topX, bottomX - point.x);\r\n                    }\r\n                }\r\n                dist = Math.min(...distances);\r\n                break;\r\n            }\r\n            case SimpleObjectMode.line: {\r\n                dist = calculateDistanceToLine(pos, point);\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unsupported shape type');\r\n            }\r\n        }\r\n        const refPoint = distRef.minDist <= 8 / s ? distRef.refPoint : null;\r\n        // distance is a smallest between dist to figure and it's reference points\r\n        dist = Math.min(distRef.minDist, dist);\r\n        return { minDist: dist, refPoint };\r\n    }\r\n    getReferencePointDistance(p) {\r\n        const dist = [];\r\n        const refPoints = this.getReferencePoints();\r\n        refPoints.forEach((rp) => {\r\n            dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\r\n        });\r\n        const minDist = dist.reduce((acc, current) => !acc ? current : acc.minDist < current.minDist ? acc : current, null);\r\n        return minDist;\r\n    }\r\n    getReferencePoints(onlyOnObject = false) {\r\n        const refPoints = [];\r\n        switch (this.item.mode) {\r\n            case SimpleObjectMode.ellipse:\r\n            case SimpleObjectMode.rectangle: {\r\n                const p0 = new Vec2(Math.min(this.item.pos[0].x, this.item.pos[1].x), Math.min(this.item.pos[0].y, this.item.pos[1].y));\r\n                const w = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).x);\r\n                const h = Math.abs(Vec2.diff(this.item.pos[0], this.item.pos[1]).y);\r\n                refPoints.push(new Vec2(p0.x + 0.5 * w, p0.y), new Vec2(p0.x + w, p0.y + 0.5 * h), new Vec2(p0.x + 0.5 * w, p0.y + h), new Vec2(p0.x, p0.y + 0.5 * h));\r\n                if (!onlyOnObject || this.item.mode === SimpleObjectMode.rectangle) {\r\n                    refPoints.push(p0, new Vec2(p0.x, p0.y + h), new Vec2(p0.x + w, p0.y + h), new Vec2(p0.x + w, p0.y));\r\n                }\r\n                break;\r\n            }\r\n            case SimpleObjectMode.line: {\r\n                this.item.pos.forEach((i) => refPoints.push(new Vec2(i.x, i.y, 0)));\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unsupported shape type');\r\n            }\r\n        }\r\n        return refPoints;\r\n    }\r\n    hoverPath(render) {\r\n        const point = [];\r\n        this.item.pos.forEach((p, index) => {\r\n            point[index] = Scale.obj2scaled(p, render.options);\r\n        });\r\n        const scaleFactor = render.options.scale;\r\n        const path = [];\r\n        // TODO: It seems that inheritance will be the better approach here\r\n        switch (this.item.mode) {\r\n            case SimpleObjectMode.ellipse: {\r\n                const rad = Vec2.diff(point[1], point[0]);\r\n                const rx = rad.x / 2;\r\n                const ry = rad.y / 2;\r\n                path.push(render.paper.ellipse(tfx(point[0].x + rx), tfx(point[0].y + ry), tfx(Math.abs(rx) + scaleFactor / 8), tfx(Math.abs(ry) + scaleFactor / 8)));\r\n                if (Math.abs(rx) - scaleFactor / 8 > 0 &&\r\n                    Math.abs(ry) - scaleFactor / 8 > 0) {\r\n                    path.push(render.paper.ellipse(tfx(point[0].x + rx), tfx(point[0].y + ry), tfx(Math.abs(rx) - scaleFactor / 8), tfx(Math.abs(ry) - scaleFactor / 8)));\r\n                }\r\n                break;\r\n            }\r\n            case SimpleObjectMode.rectangle: {\r\n                path.push(render.paper.rect(tfx(Math.min(point[0].x, point[1].x) - scaleFactor / 8), tfx(Math.min(point[0].y, point[1].y) - scaleFactor / 8), tfx(Math.max(point[0].x, point[1].x) -\r\n                    Math.min(point[0].x, point[1].x) +\r\n                    scaleFactor / 4), tfx(Math.max(point[0].y, point[1].y) -\r\n                    Math.min(point[0].y, point[1].y) +\r\n                    scaleFactor / 4)));\r\n                if (Math.max(point[0].x, point[1].x) -\r\n                    Math.min(point[0].x, point[1].x) -\r\n                    scaleFactor / 4 >\r\n                    0 &&\r\n                    Math.max(point[0].y, point[1].y) -\r\n                        Math.min(point[0].y, point[1].y) -\r\n                        scaleFactor / 4 >\r\n                        0) {\r\n                    path.push(render.paper.rect(tfx(Math.min(point[0].x, point[1].x) + scaleFactor / 8), tfx(Math.min(point[0].y, point[1].y) + scaleFactor / 8), tfx(Math.max(point[0].x, point[1].x) -\r\n                        Math.min(point[0].x, point[1].x) -\r\n                        scaleFactor / 4), tfx(Math.max(point[0].y, point[1].y) -\r\n                        Math.min(point[0].y, point[1].y) -\r\n                        scaleFactor / 4)));\r\n                }\r\n                break;\r\n            }\r\n            case SimpleObjectMode.line: {\r\n                // TODO: reuse this code for polyline\r\n                const poly = [];\r\n                const angle = Math.atan((point[1].y - point[0].y) / (point[1].x - point[0].x));\r\n                const p0 = { x: 0, y: 0 };\r\n                const p1 = { x: 0, y: 0 };\r\n                const k = point[0].x > point[1].x ? -1 : 1;\r\n                p0.x = point[0].x - k * ((scaleFactor / 8) * Math.cos(angle));\r\n                p0.y = point[0].y - k * ((scaleFactor / 8) * Math.sin(angle));\r\n                p1.x = point[1].x + k * ((scaleFactor / 8) * Math.cos(angle));\r\n                p1.y = point[1].y + k * ((scaleFactor / 8) * Math.sin(angle));\r\n                poly.push('M', p0.x + ((k * scaleFactor) / 8) * Math.sin(angle), p0.y - ((k * scaleFactor) / 8) * Math.cos(angle));\r\n                poly.push('L', p1.x + ((k * scaleFactor) / 8) * Math.sin(angle), p1.y - ((k * scaleFactor) / 8) * Math.cos(angle));\r\n                poly.push('L', p1.x - ((k * scaleFactor) / 8) * Math.sin(angle), p1.y + ((k * scaleFactor) / 8) * Math.cos(angle));\r\n                poly.push('L', p0.x - ((k * scaleFactor) / 8) * Math.sin(angle), p0.y + ((k * scaleFactor) / 8) * Math.cos(angle));\r\n                poly.push('L', p0.x + ((k * scaleFactor) / 8) * Math.sin(angle), p0.y - ((k * scaleFactor) / 8) * Math.cos(angle));\r\n                path.push(render.paper.path(poly));\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unsupported shape type');\r\n            }\r\n        }\r\n        const enhPaths = path.map((p) => {\r\n            return { path: p, stylesApplied: false };\r\n        });\r\n        return enhPaths;\r\n    }\r\n    drawHover(render) {\r\n        const paths = this.hoverPath(render).map((enhPath) => {\r\n            if (!enhPath.stylesApplied) {\r\n                return enhPath.path.attr(render.options.hoverStyle);\r\n            }\r\n            return enhPath.path;\r\n        });\r\n        render.ctab.addReObjectPath(LayerMap.hovering, this.visel, paths);\r\n        return paths;\r\n    }\r\n    makeSelectionPlate(restruct, paper, styles) {\r\n        const pos = this.item.pos.map((p) => {\r\n            return Scale.obj2scaled(p, restruct.render.options) || new Vec2();\r\n        });\r\n        const refPoints = this.getReferencePoints();\r\n        const scaleFactor = restruct.render.options.scale;\r\n        const selectionSet = restruct.render.paper.set();\r\n        selectionSet.push(generatePath(this.item.mode, paper, pos).attr(styles.hoverStyleSimpleObject));\r\n        refPoints.forEach((rp) => {\r\n            const scaledRP = Scale.obj2scaled(rp, restruct.render.options);\r\n            selectionSet.push(restruct.render.paper\r\n                .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\r\n                .attr({ fill: 'black' }));\r\n        });\r\n        return selectionSet;\r\n    }\r\n    show(restruct, options) {\r\n        const render = restruct.render;\r\n        const pos = this.item.pos.map((p) => {\r\n            return Scale.obj2scaled(p, options) || new Vec2();\r\n        });\r\n        const path = generatePath(this.item.mode, render.paper, pos, options);\r\n        const offset = options.offset;\r\n        if (offset != null)\r\n            path.translateAbs(offset.x, offset.y);\r\n        this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\r\n    }\r\n}\r\nfunction calculateDistanceToLine(pos, point) {\r\n    let dist;\r\n    if ((point.x < Math.min(pos[0].x, pos[1].x) ||\r\n        point.x > Math.max(pos[0].x, pos[1].x)) &&\r\n        (point.y < Math.min(pos[0].y, pos[1].y) ||\r\n            point.y > Math.max(pos[0].y, pos[1].y))) {\r\n        dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point));\r\n    }\r\n    else {\r\n        const a = Vec2.dist(pos[0], pos[1]);\r\n        const b = Vec2.dist(pos[0], point);\r\n        const c = Vec2.dist(pos[1], point);\r\n        const per = (a + b + c) / 2;\r\n        dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c));\r\n    }\r\n    return dist;\r\n}\r\nfunction generatePath(mode, paper, pos, options) {\r\n    let path;\r\n    switch (mode) {\r\n        case SimpleObjectMode.ellipse: {\r\n            path = draw.ellipse(paper, pos, options);\r\n            break;\r\n        }\r\n        case SimpleObjectMode.rectangle: {\r\n            path = draw.rectangle(paper, pos, options);\r\n            break;\r\n        }\r\n        case SimpleObjectMode.line: {\r\n            path = draw.line(paper, pos, options);\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Unsupported shape type');\r\n        }\r\n    }\r\n    return path;\r\n}\r\nexport default ReSimpleObject;\r\n//# sourceMappingURL=resimpleObject.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/generalEnumTypes.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/reobject.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/restruct.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/raphaelRender.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/helpers/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/draw.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/util.ts"],"map":"{\"version\":3,\"file\":\"resimpleObject.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/render/restruct/resimpleObject.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/render/restruct/resimpleObject.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Vec2 } from \"../../../domain/entities\";\r\nimport ReObject from './reobject';\r\nimport ReStruct from './restruct';\r\nimport { Render } from '../raphaelRender';\r\ninterface MinDistanceWithReferencePoint {\r\n    minDist: number;\r\n    refPoint: Vec2 | null;\r\n}\r\ninterface StyledPath {\r\n    path: any;\r\n    stylesApplied: boolean;\r\n}\r\ndeclare class ReSimpleObject extends ReObject {\r\n    private item;\r\n    constructor(simpleObject: any);\r\n    static isSelectable(): boolean;\r\n    calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint;\r\n    getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint;\r\n    getReferencePoints(onlyOnObject?: boolean): Array<Vec2>;\r\n    hoverPath(render: Render): Array<StyledPath>;\r\n    drawHover(render: Render): Array<any>;\r\n    makeSelectionPlate(restruct: ReStruct, paper: any, styles: any): any;\r\n    show(restruct: ReStruct, options: any): void;\r\n}\r\nexport default ReSimpleObject;\r\n"}}

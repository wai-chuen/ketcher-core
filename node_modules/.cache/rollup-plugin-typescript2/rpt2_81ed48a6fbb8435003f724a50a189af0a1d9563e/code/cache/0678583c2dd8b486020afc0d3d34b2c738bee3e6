{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RGroup } from \"../../../entities\";\r\nimport { ifDef } from \"../../../../utilities\";\r\nimport { moleculeToStruct } from './moleculeToStruct';\r\nexport function rgroupToStruct(ketItem) {\r\n    const struct = moleculeToStruct(ketItem);\r\n    const rgroup = rgroupLogicToStruct(ketItem.rlogic);\r\n    struct.frags.forEach((_value, key) => {\r\n        rgroup.frags.add(key);\r\n    });\r\n    if (ketItem.rlogic)\r\n        struct.rgroups.set(ketItem.rlogic.number, rgroup);\r\n    return struct;\r\n}\r\nexport function rgroupLogicToStruct(rglogic) {\r\n    const params = {};\r\n    ifDef(params, 'range', rglogic.range);\r\n    ifDef(params, 'resth', rglogic.resth);\r\n    ifDef(params, 'ifthen', rglogic.ifthen);\r\n    return new RGroup(params);\r\n}\r\n//# sourceMappingURL=rgroupToStruct.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/utilities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/serializers/ket/fromKet/moleculeToStruct.ts"],"map":"{\"version\":3,\"file\":\"rgroupToStruct.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/domain/serializers/ket/fromKet/rgroupToStruct.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,MAAM,EAAU,0BAAuB;AAEhD,OAAO,EAAE,KAAK,EAAE,8BAAiB;AACjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAA;AAErD,MAAM,UAAU,cAAc,CAAC,OAAO;IACpC,MAAM,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAA;IACxC,MAAM,MAAM,GAAG,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAClD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,GAAG,EAAE,EAAE;QACxC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACvB,CAAC,CAAC,CAAA;IACF,IAAI,OAAO,CAAC,MAAM;QAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IACrE,OAAO,MAAM,CAAA;AACf,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,OAAO;IACzC,MAAM,MAAM,GAAG,EAAE,CAAA;IACjB,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAA;IACrC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAA;IACrC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAA;IAEvC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,CAAA;AAC3B,CAAC\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/serializers/ket/fromKet/rgroupToStruct.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RGroup, Struct } from \"../../../entities\";\r\nexport declare function rgroupToStruct(ketItem: any): Struct;\r\nexport declare function rgroupLogicToStruct(rglogic: any): RGroup;\r\n"}}

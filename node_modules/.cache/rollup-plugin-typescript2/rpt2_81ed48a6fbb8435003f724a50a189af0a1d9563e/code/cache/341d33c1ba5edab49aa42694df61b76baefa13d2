{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nexport class AtomAttr extends BaseOperation {\r\n    data;\r\n    data2;\r\n    constructor(atomId, attribute, value) {\r\n        super(OperationType.ATOM_ATTR, 1);\r\n        this.data = { aid: atomId, attribute, value };\r\n        this.data2 = null;\r\n    }\r\n    execute(restruct) {\r\n        if (this.data) {\r\n            const { aid, attribute, value } = this.data;\r\n            const atom = restruct.molecule.atoms.get(aid);\r\n            if (!this.data2) {\r\n                this.data2 = {\r\n                    aid,\r\n                    attribute,\r\n                    value: atom[attribute]\r\n                };\r\n            }\r\n            atom[attribute] = value;\r\n            BaseOperation.invalidateAtom(restruct, aid);\r\n        }\r\n    }\r\n    invert() {\r\n        const inverted = new AtomAttr();\r\n        inverted.data = this.data2;\r\n        inverted.data2 = this.data;\r\n        return inverted;\r\n    }\r\n    isDummy(restruct) {\r\n        return (restruct.molecule.atoms.get(this.data?.aid)[this.data?.attribute] ===\r\n            this.data?.value);\r\n    }\r\n}\r\n//# sourceMappingURL=AtomAttr.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts"],"map":"{\"version\":3,\"file\":\"AtomAttr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/atom/AtomAttr.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAShD,MAAM,OAAO,QAAS,SAAQ,aAAa;IACzC,IAAI,CAAa;IACjB,KAAK,CAAa;IAElB,YAAY,MAAY,EAAE,SAAe,EAAE,KAAW;QACpD,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAA;QAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;IACnB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;YAE3C,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA;YAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG;oBACX,GAAG;oBACH,SAAS;oBACT,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC;iBACvB,CAAA;aACF;YAED,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;YACvB,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;SAC5C;IACH,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAA;QAC/B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAA;QAC1B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;QAC1B,OAAO,QAAQ,CAAA;IACjB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,OAAO,CACL,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAE,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC;YAClE,IAAI,CAAC,IAAI,EAAE,KAAK,CACjB,CAAA;IACH,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/atom/AtomAttr.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { ReStruct } from '../../../render';\r\ndeclare type Data = {\r\n    aid?: any;\r\n    attribute?: any;\r\n    value?: any;\r\n};\r\nexport declare class AtomAttr extends BaseOperation {\r\n    data: Data | null;\r\n    data2: Data | null;\r\n    constructor(atomId?: any, attribute?: any, value?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): AtomAttr;\r\n    isDummy(restruct: ReStruct): boolean;\r\n}\r\nexport {};\r\n"}}

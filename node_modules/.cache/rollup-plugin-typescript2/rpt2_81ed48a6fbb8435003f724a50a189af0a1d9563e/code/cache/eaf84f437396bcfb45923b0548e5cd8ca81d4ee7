{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nfunction isCorrectStereoCenter(bond, beginNeighs, endNeighs, struct) {\r\n    const beginAtom = struct.atoms.get(bond.begin);\r\n    let EndAtomNeigh = NaN;\r\n    if (endNeighs?.length === 2) {\r\n        EndAtomNeigh =\r\n            endNeighs[0].aid === bond.begin ? endNeighs[1].aid : endNeighs[0].aid;\r\n    }\r\n    if (bond.stereo > 0) {\r\n        if (endNeighs?.length === 1 &&\r\n            beginNeighs?.length === 2 &&\r\n            Number(beginAtom?.implicitH) % 2 === 0) {\r\n            return false;\r\n        }\r\n        if (endNeighs?.length === 2 &&\r\n            beginNeighs?.length === 2 &&\r\n            Number(beginAtom?.implicitH) % 2 === 0 &&\r\n            struct.atomGetNeighbors(EndAtomNeigh)?.length === 1) {\r\n            return false;\r\n        }\r\n        if (beginNeighs?.length === 1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport const StereoValidator = {\r\n    isCorrectStereoCenter\r\n};\r\n//# sourceMappingURL=stereoValidator.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts"],"map":"{\"version\":3,\"file\":\"stereoValidator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/domain/helpers/stereoValidator.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAI7E,SAAS,qBAAqB,CAC5B,IAAU,EACV,WAAwC,EACxC,SAAsC,EACtC,MAAc;IAEd,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAE9C,IAAI,YAAY,GAAuB,GAAG,CAAA;IAE1C,IAAI,SAAS,EAAE,MAAM,KAAK,CAAC,EAAE;QAC3B,YAAY;YACV,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA;KACxE;IAED,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,IACE,SAAS,EAAE,MAAM,KAAK,CAAC;YACvB,WAAW,EAAE,MAAM,KAAK,CAAC;YACzB,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EACtC;YACA,OAAO,KAAK,CAAA;SACb;QAED,IACE,SAAS,EAAE,MAAM,KAAK,CAAC;YACvB,WAAW,EAAE,MAAM,KAAK,CAAC;YACzB,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;YACtC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,MAAM,KAAK,CAAC,EACnD;YACA,OAAO,KAAK,CAAA;SACb;QAED,IAAI,WAAW,EAAE,MAAM,KAAK,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAA;SACb;QAED,OAAO,IAAI,CAAA;KACZ;SAAM;QACL,OAAO,KAAK,CAAA;KACb;AACH,CAAC;AAED,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,qBAAqB;CACtB,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/helpers/stereoValidator.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Bond, Neighbor, Struct } from \"../entities\";\r\ndeclare function isCorrectStereoCenter(bond: Bond, beginNeighs: Array<Neighbor> | undefined, endNeighs: Array<Neighbor> | undefined, struct: Struct): boolean;\r\nexport declare const StereoValidator: {\r\n    isCorrectStereoCenter: typeof isCorrectStereoCenter;\r\n};\r\nexport {};\r\n"}}

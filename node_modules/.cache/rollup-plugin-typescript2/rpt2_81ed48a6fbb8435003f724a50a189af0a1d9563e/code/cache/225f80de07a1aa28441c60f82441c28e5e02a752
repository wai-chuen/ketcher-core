{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReRGroup } from '../../../render';\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nimport { RGroup } from \"../../../../domain/entities\";\r\nexport class RGroupFragment extends BaseOperation {\r\n    rgid_new;\r\n    rg_new;\r\n    rgid_old;\r\n    rg_old;\r\n    frid;\r\n    constructor(rgroupId, fragmentId, rg) {\r\n        super(OperationType.R_GROUP_FRAGMENT);\r\n        this.rgid_new = rgroupId;\r\n        this.rg_new = rg;\r\n        this.rgid_old = null;\r\n        this.rg_old = null;\r\n        this.frid = fragmentId;\r\n    }\r\n    execute(restruct) {\r\n        // eslint-disable-line max-statements\r\n        const struct = restruct.molecule;\r\n        this.rgid_old =\r\n            this.rgid_old || RGroup.findRGroupByFragment(struct.rgroups, this.frid);\r\n        this.rg_old = this.rgid_old ? struct.rgroups.get(this.rgid_old) : null;\r\n        this.removeOld(struct, restruct);\r\n        this.setNew(struct, restruct);\r\n    }\r\n    removeOld(struct, restruct) {\r\n        if (!this.rg_old) {\r\n            return;\r\n        }\r\n        this.rg_old.frags.delete(this.frid);\r\n        restruct.clearVisel(restruct.rgroups.get(this.rgid_old).visel);\r\n        if (this.rg_old.frags.size === 0) {\r\n            restruct.rgroups.delete(this.rgid_old);\r\n            struct.rgroups.delete(this.rgid_old);\r\n            restruct.markItemRemoved();\r\n        }\r\n        else {\r\n            restruct.markItem('rgroups', this.rgid_old, 1);\r\n        }\r\n    }\r\n    setNew(struct, restruct) {\r\n        if (!this.rgid_new) {\r\n            return;\r\n        }\r\n        let rgNew = struct.rgroups.get(this.rgid_new);\r\n        if (!rgNew) {\r\n            rgNew = this.rg_new || new RGroup();\r\n            struct.rgroups.set(this.rgid_new, rgNew);\r\n            restruct.rgroups.set(this.rgid_new, new ReRGroup(rgNew));\r\n        }\r\n        else {\r\n            restruct.markItem('rgroups', this.rgid_new, 1);\r\n        }\r\n        rgNew.frags.add(this.frid);\r\n    }\r\n    invert() {\r\n        return new RGroupFragment(this.rgid_old, this.frid, this.rg_old);\r\n    }\r\n}\r\n//# sourceMappingURL=RGroupFragment.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts"],"map":"{\"version\":3,\"file\":\"RGroupFragment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/rgroup/RGroupFragment.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/rgroup/RGroupFragment.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReStruct } from '../../../render';\r\nimport { BaseOperation } from '../base';\r\nexport declare class RGroupFragment extends BaseOperation {\r\n    rgid_new: any;\r\n    rg_new: any;\r\n    rgid_old: any;\r\n    rg_old: any;\r\n    frid: any;\r\n    constructor(rgroupId: any, fragmentId: any, rg?: any);\r\n    execute(restruct: ReStruct): void;\r\n    private removeOld;\r\n    private setNew;\r\n    invert(): RGroupFragment;\r\n}\r\n"}}

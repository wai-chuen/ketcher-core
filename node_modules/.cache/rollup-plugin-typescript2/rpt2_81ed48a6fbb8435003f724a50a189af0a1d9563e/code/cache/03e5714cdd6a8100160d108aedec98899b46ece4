{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nexport class RGroupAttr extends BaseOperation {\r\n    data;\r\n    data2;\r\n    constructor(rgroupId, attribute, value) {\r\n        super(OperationType.R_GROUP_ATTR);\r\n        this.data = { rgid: rgroupId, attribute, value };\r\n        this.data2 = null;\r\n    }\r\n    execute(restruct) {\r\n        if (this.data) {\r\n            const { rgid, attribute, value } = this.data;\r\n            const rgp = restruct.molecule.rgroups.get(rgid);\r\n            if (!rgp) {\r\n                return;\r\n            }\r\n            if (!this.data2) {\r\n                this.data2 = {\r\n                    rgid,\r\n                    attribute,\r\n                    value: rgp[attribute]\r\n                };\r\n            }\r\n            rgp[attribute] = value;\r\n            BaseOperation.invalidateItem(restruct, 'rgroups', rgid);\r\n        }\r\n    }\r\n    invert() {\r\n        const inverted = new RGroupAttr();\r\n        inverted.data = this.data2;\r\n        inverted.data2 = this.data;\r\n        return inverted;\r\n    }\r\n    isDummy(restruct) {\r\n        if (this.data) {\r\n            const { rgid, attribute, value } = this.data;\r\n            const rgroup = restruct.molecule.rgroups.get(rgid);\r\n            return rgroup[attribute] === value;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=RGroupAttr.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts"],"map":"{\"version\":3,\"file\":\"RGroupAttr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/rgroup/RGroupAttr.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAShD,MAAM,OAAO,UAAW,SAAQ,aAAa;IAC3C,IAAI,CAAa;IACjB,KAAK,CAAa;IAElB,YAAY,QAAc,EAAE,SAAe,EAAE,KAAW;QACtD,KAAK,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,CAAA;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;IACnB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;YAE5C,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,CAAA;YAEhD,IAAI,CAAC,GAAG,EAAE;gBACR,OAAM;aACP;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACf,IAAI,CAAC,KAAK,GAAG;oBACX,IAAI;oBACJ,SAAS;oBACT,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC;iBACtB,CAAA;aACF;YAED,GAAG,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;YAEtB,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;SACxD;IACH,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAA;QACjC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAA;QAC1B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;QAC1B,OAAO,QAAQ,CAAA;IACjB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;YAC5C,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,CAAA;YACnD,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,KAAK,CAAA;SACnC;QACD,OAAO,KAAK,CAAA;IACd,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/rgroup/RGroupAttr.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { ReStruct } from '../../../render';\r\ndeclare type Data = {\r\n    rgid: any;\r\n    attribute: any;\r\n    value: any;\r\n};\r\nexport declare class RGroupAttr extends BaseOperation {\r\n    data: Data | null;\r\n    data2: Data | null;\r\n    constructor(rgroupId?: any, attribute?: any, value?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): RGroupAttr;\r\n    isDummy(restruct: ReStruct): boolean;\r\n}\r\nexport {};\r\n"}}

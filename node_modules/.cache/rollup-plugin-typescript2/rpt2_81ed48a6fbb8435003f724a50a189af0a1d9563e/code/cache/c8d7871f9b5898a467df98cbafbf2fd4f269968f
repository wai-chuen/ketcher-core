{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Atom, Vec2 } from \"../../../domain/entities\";\r\nimport { AtomAdd, BondAdd, CalcImplicitH } from '../operations';\r\nimport { atomForNewBond, atomGetAttr } from './utils';\r\nimport { fromAtomsAttrs, mergeSgroups } from './atom';\r\nimport { fromBondStereoUpdate, fromBondsAttrs, fromBondAddition } from './bond';\r\nimport { Action } from './action';\r\nimport closest from '../shared/closest';\r\nimport { fromAromaticTemplateOnBond } from './aromaticFusing';\r\nimport { fromPaste } from './paste';\r\nimport utils from '../shared/utils';\r\nimport { fromSgroupAddition } from './sgroup';\r\nexport function fromTemplateOnCanvas(restruct, template, pos, angle) {\r\n    const [action, pasteItems] = fromPaste(restruct, template.molecule, pos, angle);\r\n    action.addOp(new CalcImplicitH(pasteItems.atoms).perform(restruct));\r\n    return [action, pasteItems];\r\n}\r\nfunction extraBondAction(restruct, aid, angle) {\r\n    let action = new Action();\r\n    const frid = atomGetAttr(restruct, aid, 'fragment');\r\n    let additionalAtom = null;\r\n    if (angle === null) {\r\n        const middleAtom = atomForNewBond(restruct, aid);\r\n        const actionRes = fromBondAddition(restruct, { type: 1 }, aid, middleAtom.atom, middleAtom.pos.get_xy0());\r\n        action = actionRes[0];\r\n        action.operations.reverse();\r\n        additionalAtom = actionRes[2];\r\n    }\r\n    else {\r\n        const operation = new AtomAdd({ label: 'C', fragment: frid }, new Vec2(1, 0)\r\n            .rotate(angle)\r\n            .add(restruct.molecule.atoms.get(aid).pp)\r\n            .get_xy0()).perform(restruct);\r\n        action.addOp(operation);\r\n        action.addOp(new BondAdd(aid, operation.data.aid, { type: 1 }).perform(restruct));\r\n        additionalAtom = operation.data.aid;\r\n    }\r\n    return { action, aid1: additionalAtom };\r\n}\r\nexport function fromTemplateOnAtom(restruct, template, aid, angle, extraBond) {\r\n    let action = new Action();\r\n    const tmpl = template.molecule;\r\n    const struct = restruct.molecule;\r\n    const isTmplSingleGroup = template.molecule.isSingleGroup();\r\n    let atom = struct.atoms.get(aid); // aid - the atom that was clicked on\r\n    let aid1 = aid; // aid1 - the atom on the other end of the extra bond || aid\r\n    let delta = null;\r\n    if (extraBond) {\r\n        // create extra bond after click on atom\r\n        const extraRes = extraBondAction(restruct, aid, angle);\r\n        action = extraRes.action;\r\n        aid1 = extraRes.aid1;\r\n        atom = struct.atoms.get(aid1);\r\n        delta = utils.calcAngle(struct.atoms.get(aid).pp, atom.pp) - template.angle0;\r\n    }\r\n    else {\r\n        if (angle === null) {\r\n            angle = utils.calcAngle(atom.pp, atomForNewBond(restruct, aid).pos);\r\n        }\r\n        delta = angle - template.angle0;\r\n    }\r\n    const map = new Map();\r\n    const xy0 = tmpl.atoms.get(template.aid).pp;\r\n    const frid = atomGetAttr(restruct, aid, 'fragment');\r\n    /* For merge */\r\n    const pasteItems = {\r\n        // only atoms and bonds now\r\n        atoms: [],\r\n        bonds: []\r\n    };\r\n    /* ----- */\r\n    tmpl.atoms.forEach((a, id) => {\r\n        const attrs = Atom.getAttrHash(a);\r\n        attrs.fragment = frid;\r\n        if (id === template.aid) {\r\n            action.mergeWith(fromAtomsAttrs(restruct, aid1, attrs, true));\r\n            map.set(id, aid1);\r\n            pasteItems.atoms.push(aid1);\r\n        }\r\n        else {\r\n            const v = Vec2.diff(a.pp, xy0).rotate(delta).add(atom.pp);\r\n            const operation = new AtomAdd(attrs, v.get_xy0()).perform(restruct);\r\n            action.addOp(operation);\r\n            map.set(id, operation.data.aid);\r\n            pasteItems.atoms.push(operation.data.aid);\r\n        }\r\n    });\r\n    if (!isTmplSingleGroup)\r\n        mergeSgroups(action, restruct, pasteItems.atoms, aid);\r\n    tmpl.bonds.forEach((bond) => {\r\n        const operation = new BondAdd(map.get(bond.begin), map.get(bond.end), bond).perform(restruct);\r\n        action.addOp(operation);\r\n        pasteItems.bonds.push(operation.data.bid);\r\n    });\r\n    tmpl.sgroups.forEach((sg) => {\r\n        const newsgid = restruct.molecule.sgroups.newId();\r\n        const sgAtoms = sg.atoms.map((aid) => map.get(aid));\r\n        const sgAction = fromSgroupAddition(restruct, sg.type, sgAtoms, sg.data, newsgid, atom.pp, sg.type === 'SUP' ? sg.expanded : null, sg.data.name);\r\n        sgAction.operations.reverse().forEach((oper) => {\r\n            action.addOp(oper);\r\n        });\r\n    });\r\n    action.operations.reverse();\r\n    action.addOp(new CalcImplicitH([...pasteItems.atoms, aid]).perform(restruct));\r\n    action.mergeWith(fromBondStereoUpdate(restruct, restruct.molecule.bonds.get(pasteItems.bonds[0])));\r\n    return [action, pasteItems];\r\n}\r\nexport function fromTemplateOnBondAction(restruct, template, bid, events, flip, force) {\r\n    if (!force)\r\n        return fromTemplateOnBond(restruct, template, bid, flip);\r\n    const simpleFusing = (restruct, template, bid) => fromTemplateOnBond(restruct, template, bid, flip); // eslint-disable-line\r\n    /* aromatic merge (Promise) */\r\n    return fromAromaticTemplateOnBond(restruct, template, bid, events, simpleFusing);\r\n}\r\nfunction fromTemplateOnBond(restruct, template, bid, flip) {\r\n    // TODO: refactor function !!\r\n    const action = new Action();\r\n    const tmpl = template.molecule;\r\n    const struct = restruct.molecule;\r\n    const bond = struct.bonds.get(bid);\r\n    const tmplBond = tmpl.bonds.get(template.bid);\r\n    const tmplBegin = tmpl.atoms.get(flip ? tmplBond.end : tmplBond.begin);\r\n    const atomsMap = new Map([\r\n        [tmplBond.begin, flip ? bond.end : bond.begin],\r\n        [tmplBond.end, flip ? bond.begin : bond.end]\r\n    ]);\r\n    // calc angle\r\n    const bondAtoms = {\r\n        begin: flip ? tmplBond.end : tmplBond.begin,\r\n        end: flip ? tmplBond.begin : tmplBond.end\r\n    };\r\n    const { angle, scale } = utils.mergeBondsParams(struct, bond, tmpl, bondAtoms);\r\n    const frid = struct.getBondFragment(bid);\r\n    /* For merge */\r\n    const pasteItems = {\r\n        // only atoms and bonds now\r\n        atoms: [],\r\n        bonds: []\r\n    };\r\n    /* ----- */\r\n    tmpl.atoms.forEach((atom, id) => {\r\n        const attrs = Atom.getAttrHash(atom);\r\n        attrs.fragment = frid;\r\n        if (id === tmplBond.begin || id === tmplBond.end) {\r\n            action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\r\n            return;\r\n        }\r\n        const v = Vec2.diff(atom.pp, tmplBegin.pp)\r\n            .rotate(angle)\r\n            .scaled(scale)\r\n            .add(struct.atoms.get(bond.begin).pp);\r\n        const mergeA = closest.atom(restruct, v, null, 0.1);\r\n        if (mergeA === null) {\r\n            const operation = new AtomAdd(attrs, v).perform(restruct);\r\n            action.addOp(operation);\r\n            atomsMap.set(id, operation.data.aid);\r\n            pasteItems.atoms.push(operation.data.aid);\r\n        }\r\n        else {\r\n            atomsMap.set(id, mergeA.id);\r\n            action.mergeWith(fromAtomsAttrs(restruct, atomsMap.get(id), attrs, true));\r\n            // TODO [RB] need to merge fragments?\r\n        }\r\n    });\r\n    mergeSgroups(action, restruct, pasteItems.atoms, bond.begin);\r\n    tmpl.bonds.forEach((tBond) => {\r\n        const existId = struct.findBondId(atomsMap.get(tBond.begin), atomsMap.get(tBond.end));\r\n        if (existId === null) {\r\n            const operation = new BondAdd(atomsMap.get(tBond.begin), atomsMap.get(tBond.end), tBond).perform(restruct);\r\n            action.addOp(operation);\r\n            pasteItems.bonds.push(operation.data.bid);\r\n        }\r\n        else {\r\n            const commonBond = bond.type > tmplBond.type ? bond : tmplBond;\r\n            action.mergeWith(fromBondsAttrs(restruct, existId, commonBond, true));\r\n        }\r\n    });\r\n    if (pasteItems.atoms.length) {\r\n        action.addOp(new CalcImplicitH([bond.begin, bond.end, ...pasteItems.atoms]).perform(restruct));\r\n    }\r\n    if (pasteItems.bonds.length) {\r\n        action.mergeWith(fromBondStereoUpdate(restruct, restruct.molecule.bonds.get(pasteItems.bonds[0])));\r\n    }\r\n    action.operations.reverse();\r\n    return [action, pasteItems];\r\n}\r\n//# sourceMappingURL=template.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/utils.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/atom.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/bond.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/action.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/shared/closest.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/aromaticFusing.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/paste.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/shared/utils.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/sgroup.ts"],"map":"{\"version\":3,\"file\":\"template.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/actions/template.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/actions/template.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nexport declare function fromTemplateOnCanvas(restruct: any, template: any, pos: any, angle: any): any[];\r\nexport declare function fromTemplateOnAtom(restruct: any, template: any, aid: any, angle: any, extraBond: any): any[];\r\nexport declare function fromTemplateOnBondAction(restruct: any, template: any, bid: any, events: any, flip: any, force: any): any[] | Promise<any>;\r\n"}}

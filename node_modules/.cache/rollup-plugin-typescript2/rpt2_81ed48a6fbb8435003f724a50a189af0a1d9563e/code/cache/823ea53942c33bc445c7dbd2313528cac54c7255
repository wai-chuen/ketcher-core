{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AtomMove, BondMove, EnhancedFlagMove, FragmentAdd, FragmentDelete, FragmentDeleteStereoAtom, FragmentStereoFlag, LoopMove, RxnArrowMove, RxnPlusMove, SGroupDataMove, SimpleObjectMove, TextMove } from '../operations';\r\nimport { Pile, RGroup, Vec2 } from \"../../../domain/entities\";\r\nimport { fromRGroupFragment, fromUpdateIfThen } from './rgroup';\r\nimport { Action } from './action';\r\nimport { fromAtomsFragmentAttr } from './atom';\r\nimport { getRelSgroupsBySelection } from './utils';\r\nexport function fromMultipleMove(restruct, lists, d) {\r\n    d = new Vec2(d);\r\n    const action = new Action();\r\n    const struct = restruct.molecule;\r\n    const loops = new Pile();\r\n    const atomsToInvalidate = new Pile();\r\n    if (lists.atoms) {\r\n        const atomSet = new Pile(lists.atoms);\r\n        const bondlist = [];\r\n        restruct.bonds.forEach((bond, bid) => {\r\n            if (atomSet.has(bond.b.begin) && atomSet.has(bond.b.end)) {\r\n                bondlist.push(bid);\r\n                ['hb1', 'hb2'].forEach((hb) => {\r\n                    const loop = struct.halfBonds.get(bond.b[hb]).loop;\r\n                    if (loop >= 0)\r\n                        loops.add(loop);\r\n                });\r\n                return;\r\n            }\r\n            if (atomSet.has(bond.b.begin)) {\r\n                atomsToInvalidate.add(bond.b.begin);\r\n                return;\r\n            }\r\n            if (atomSet.has(bond.b.end))\r\n                atomsToInvalidate.add(bond.b.end);\r\n        });\r\n        bondlist.forEach((bond) => {\r\n            action.addOp(new BondMove(bond, d));\r\n        });\r\n        loops.forEach((loopId) => {\r\n            if (restruct.reloops.get(loopId) && restruct.reloops.get(loopId).visel) {\r\n                // hack\r\n                action.addOp(new LoopMove(loopId, d));\r\n            }\r\n        });\r\n        lists.atoms.forEach((aid) => {\r\n            action.addOp(new AtomMove(aid, d, !atomsToInvalidate.has(aid)));\r\n        });\r\n        if (lists.sgroupData && lists.sgroupData.length === 0) {\r\n            const sgroups = getRelSgroupsBySelection(restruct, lists.atoms);\r\n            sgroups.forEach((sg) => {\r\n                action.addOp(new SGroupDataMove(sg.id, d));\r\n            });\r\n        }\r\n    }\r\n    if (lists.rxnArrows) {\r\n        lists.rxnArrows.forEach((rxnArrow) => {\r\n            action.addOp(new RxnArrowMove(rxnArrow, d, true));\r\n        });\r\n    }\r\n    if (lists.rxnPluses) {\r\n        lists.rxnPluses.forEach((rxnPulse) => {\r\n            action.addOp(new RxnPlusMove(rxnPulse, d, true));\r\n        });\r\n    }\r\n    if (lists.simpleObjects) {\r\n        lists.simpleObjects.forEach((simpleObject) => {\r\n            action.addOp(new SimpleObjectMove(simpleObject, d, true));\r\n        });\r\n    }\r\n    if (lists.sgroupData) {\r\n        lists.sgroupData.forEach((sgData) => {\r\n            action.addOp(new SGroupDataMove(sgData, d));\r\n        });\r\n    }\r\n    if (lists.enhancedFlags) {\r\n        lists.enhancedFlags.forEach((fid) => {\r\n            action.addOp(new EnhancedFlagMove(fid, d));\r\n        });\r\n    }\r\n    if (lists.texts) {\r\n        lists.texts.forEach((text) => {\r\n            action.addOp(new TextMove(text, d, true));\r\n        });\r\n    }\r\n    return action.perform(restruct);\r\n}\r\nexport function fromStereoFlagUpdate(restruct, frid, flag = null) {\r\n    const action = new Action();\r\n    if (!flag) {\r\n        const struct = restruct.molecule;\r\n        const frag = restruct.molecule.frags.get(frid);\r\n        frag.stereoAtoms.forEach((aid) => {\r\n            if (struct.atoms.get(aid).stereoLabel === null) {\r\n                action.addOp(new FragmentDeleteStereoAtom(frid, aid));\r\n            }\r\n        });\r\n    }\r\n    action.addOp(new FragmentStereoFlag(frid));\r\n    return action.perform(restruct);\r\n}\r\n/**\r\n * @param restruct { ReStruct }\r\n * @param aid { number }\r\n * @param frid { number }\r\n * @param newfrid { number }\r\n * @returns { Action }\r\n */\r\nfunction processAtom(restruct, aid, frid, newfrid) {\r\n    const queue = [aid];\r\n    const usedIds = new Pile(queue);\r\n    while (queue.length > 0) {\r\n        const id = queue.shift();\r\n        restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\r\n            if (restruct.molecule.atoms.get(nei.aid).fragment === frid &&\r\n                !usedIds.has(nei.aid)) {\r\n                usedIds.add(nei.aid);\r\n                queue.push(nei.aid);\r\n            }\r\n        });\r\n    }\r\n    return fromAtomsFragmentAttr(restruct, usedIds, newfrid);\r\n}\r\n/**\r\n * @param restruct { ReStruct }\r\n * @param frid { number }\r\n * @param rgForRemove\r\n * @return { Action }\r\n */\r\n// TODO [RB] the thing is too tricky :) need something else in future\r\nexport function fromFragmentSplit(restruct, frid, rgForRemove = []) {\r\n    const action = new Action();\r\n    const rgid = RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid);\r\n    restruct.molecule.atoms.forEach((atom, aid) => {\r\n        if (atom.fragment === frid) {\r\n            const newfrid = action.addOp(new FragmentAdd().perform(restruct)).frid;\r\n            action.mergeWith(processAtom(restruct, aid, frid, newfrid));\r\n            if (rgid)\r\n                action.mergeWith(fromRGroupFragment(restruct, rgid, newfrid));\r\n        }\r\n    });\r\n    if (frid !== -1) {\r\n        action.mergeWith(fromRGroupFragment(restruct, 0, frid));\r\n        action.addOp(new FragmentDelete(frid).perform(restruct));\r\n        action.mergeWith(fromUpdateIfThen(restruct, 0, rgid, rgForRemove));\r\n    }\r\n    action.operations.reverse();\r\n    return action;\r\n}\r\n//# sourceMappingURL=fragment.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/rgroup.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/action.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/atom.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/utils.ts"],"map":"{\"version\":3,\"file\":\"fragment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/actions/fragment.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EACL,QAAQ,EACR,QAAQ,EACR,gBAAgB,EAChB,WAAW,EACX,cAAc,EACd,wBAAwB,EACxB,kBAAkB,EAClB,QAAQ,EACR,YAAY,EACZ,WAAW,EACX,cAAc,EACd,gBAAgB,EAChB,QAAQ,EACT,MAAM,eAAe,CAAA;AACtB,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,iCAAuB;AACpD,OAAO,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAA;AAE/D,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AACjC,OAAO,EAAE,qBAAqB,EAAE,MAAM,QAAQ,CAAA;AAC9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,SAAS,CAAA;AAElD,MAAM,UAAU,gBAAgB,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC;IACjD,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA;IAEf,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAC3B,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;IAChC,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAA;IACxB,MAAM,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAA;IAEpC,IAAI,KAAK,CAAC,KAAK,EAAE;QACf,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACrC,MAAM,QAAQ,GAAkB,EAAE,CAAA;QAElC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;YACnC,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBACxD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAGjB;gBAAA,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;oBAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;oBAClD,IAAI,IAAI,IAAI,CAAC;wBAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBAChC,CAAC,CAAC,CAAA;gBACF,OAAM;aACP;YAED,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC7B,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;gBACnC,OAAM;aACP;YAED,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QAChE,CAAC,CAAC,CAAA;QAEF,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACxB,MAAM,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;QACrC,CAAC,CAAC,CAAA;QAEF,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACvB,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE;gBACtE,OAAO;gBACP,MAAM,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;aACtC;QACH,CAAC,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1B,MAAM,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACjE,CAAC,CAAC,CAAA;QAEF,IAAI,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YACrD,MAAM,OAAO,GAAG,wBAAwB,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;YAC/D,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;gBACrB,MAAM,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;YAC5C,CAAC,CAAC,CAAA;SACH;KACF;IAED,IAAI,KAAK,CAAC,SAAS,EAAE;QACnB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACnC,MAAM,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;QACnD,CAAC,CAAC,CAAA;KACH;IAED,IAAI,KAAK,CAAC,SAAS,EAAE;QACnB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YACnC,MAAM,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;KACH;IAED,IAAI,KAAK,CAAC,aAAa,EAAE;QACvB,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;YAC3C,MAAM,CAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;QAC3D,CAAC,CAAC,CAAA;KACH;IAED,IAAI,KAAK,CAAC,UAAU,EAAE;QACpB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAClC,MAAM,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;QAC7C,CAAC,CAAC,CAAA;KACH;IAED,IAAI,KAAK,CAAC,aAAa,EAAE;QACvB,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAClC,MAAM,CAAC,KAAK,CAAC,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;KACH;IAED,IAAI,KAAK,CAAC,KAAK,EAAE;QACf,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;KACH;IAED,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AACjC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI;IAC9D,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAE3B,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAChC,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAC9C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,KAAK,IAAI,EAAE;gBAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,wBAAwB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;aACtD;QACH,CAAC,CAAC,CAAA;KACH;IAED,MAAM,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAA;IAC1C,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AACjC,CAAC;AAED;;;;;;GAMG;AACH,SAAS,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO;IAC/C,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAA;IACnB,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAA;IAE/B,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACvB,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,CAAA;QAExB,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACrD,IACE,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,IAAI;gBACtD,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EACrB;gBACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;gBACpB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;aACpB;QACH,CAAC,CAAC,CAAA;KACH;IAED,OAAO,qBAAqB,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;AAC1D,CAAC;AAED;;;;;GAKG;AACH,qEAAqE;AACrE,MAAM,UAAU,iBAAiB,CAC/B,QAAQ,EACR,IAAI,EACJ,cAA6B,EAAE;IAE/B,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IAEzE,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAC5C,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YAC1B,MAAM,OAAO,GACX,MAAM,CAAC,KAAK,CAAC,IAAI,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CACjD,CAAC,IAAI,CAAA;YAEN,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAA;YAE3D,IAAI,IAAI;gBAAE,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAA;SACxE;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;QACf,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;QACvD,MAAM,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAA;QACxD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAA;KACnE;IAED,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA;IAC3B,OAAO,MAAM,CAAA;AACf,CAAC\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/actions/fragment.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Action } from './action';\r\nexport declare function fromMultipleMove(restruct: any, lists: any, d: any): Action;\r\nexport declare function fromStereoFlagUpdate(restruct: any, frid: any, flag?: null): Action;\r\n/**\r\n * @param restruct { ReStruct }\r\n * @param frid { number }\r\n * @param rgForRemove\r\n * @return { Action }\r\n */\r\nexport declare function fromFragmentSplit(restruct: any, frid: any, rgForRemove?: Array<number>): Action;\r\n"}}

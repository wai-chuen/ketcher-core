{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AtomMove, BondAttr, EnhancedFlagMove, RxnArrowMove, RxnPlusMove, SGroupDataMove } from '../operations';\r\nimport { Bond, Fragment, Pile, Vec2 } from \"../../../domain/entities\";\r\nimport { getRelSgroupsBySelection, structSelection, isAttachmentBond } from './utils';\r\nimport { Action } from './action';\r\nimport utils from '../shared/utils';\r\nexport function fromFlip(restruct, selection, dir, center) {\r\n    // eslint-disable-line max-statements\r\n    const struct = restruct.molecule;\r\n    const action = new Action();\r\n    if (!selection) {\r\n        selection = structSelection(struct);\r\n    }\r\n    if (!selection.atoms) {\r\n        return action.perform(restruct);\r\n    }\r\n    const fids = selection.atoms.reduce((acc, aid) => {\r\n        const atom = struct.atoms.get(aid);\r\n        if (!acc[atom.fragment]) {\r\n            acc[atom.fragment] = [];\r\n        }\r\n        acc[atom.fragment].push(aid);\r\n        return acc;\r\n    }, {});\r\n    const fidsNumberKeys = Object.keys(fids).map((frag) => parseInt(frag, 10));\r\n    const isFragFound = fidsNumberKeys.find((frag) => {\r\n        const allFragmentsOfStructure = struct.getFragmentIds(frag);\r\n        const selectedFragmentsOfStructure = new Pile(fids[frag]);\r\n        const res = allFragmentsOfStructure.equals(selectedFragmentsOfStructure);\r\n        return !res;\r\n    });\r\n    if (typeof isFragFound === 'number') {\r\n        return flipPartOfStructure({\r\n            fids,\r\n            struct,\r\n            restruct,\r\n            dir,\r\n            action,\r\n            selection\r\n        });\r\n    }\r\n    return flipStandaloneStructure({\r\n        fids,\r\n        struct,\r\n        restruct,\r\n        center,\r\n        dir,\r\n        action,\r\n        selection\r\n    });\r\n}\r\nfunction getRotationPoint(struct, selection) {\r\n    const { bonds } = struct;\r\n    const isSelectedAtom = (atomId) => selection.atoms.includes(atomId);\r\n    const getAttachmentBond = () => {\r\n        for (const [bondId, bond] of bonds.entries()) {\r\n            if (isAttachmentBond(bond, selection)) {\r\n                return [bondId, bond];\r\n            }\r\n        }\r\n        return [null, null];\r\n    };\r\n    const getRotationPointAtomId = (attachmentBondId, attachmentBond) => {\r\n        if (selection.bonds.includes(attachmentBondId)) {\r\n            return [attachmentBond.begin, attachmentBond.end].find((atomId) => !isSelectedAtom(atomId));\r\n        }\r\n        return [attachmentBond.begin, attachmentBond.end].find(isSelectedAtom);\r\n    };\r\n    const [attachmentBondId, attachmentBond] = getAttachmentBond();\r\n    const rotationPointAtomId = getRotationPointAtomId(attachmentBondId, attachmentBond);\r\n    return struct.atoms.get(rotationPointAtomId).pp;\r\n}\r\nfunction flipBonds(selection, struct, action) {\r\n    if (selection.bonds) {\r\n        selection.bonds.forEach((bid) => {\r\n            const bond = struct.bonds.get(bid);\r\n            if (bond.type !== Bond.PATTERN.TYPE.SINGLE) {\r\n                return;\r\n            }\r\n            if (bond.stereo === Bond.PATTERN.STEREO.UP) {\r\n                action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.DOWN));\r\n                return;\r\n            }\r\n            if (bond.stereo === Bond.PATTERN.STEREO.DOWN) {\r\n                action.addOp(new BondAttr(bid, 'stereo', Bond.PATTERN.STEREO.UP));\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction flipPartOfStructure({ fids, struct, restruct, dir, action, selection }) {\r\n    const rotationPoint = getRotationPoint(struct, selection);\r\n    Object.keys(fids).forEach((frag) => {\r\n        const fragment = new Pile(fids[frag]);\r\n        fragment.forEach((aid) => {\r\n            const atom = struct.atoms.get(aid);\r\n            const d = flipItemByCenter(atom, rotationPoint, dir);\r\n            action.addOp(new AtomMove(aid, d));\r\n        });\r\n        const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment));\r\n        sgroups.forEach((sg) => {\r\n            const d = flipItemByCenter(sg, rotationPoint, dir);\r\n            action.addOp(new SGroupDataMove(sg.id, d));\r\n        });\r\n    });\r\n    flipBonds(selection, struct, action);\r\n    return action.perform(restruct);\r\n}\r\nfunction flipStandaloneStructure({ fids, struct, restruct, center, dir, action, selection }) {\r\n    Object.keys(fids).forEach((frag) => {\r\n        const fragment = new Pile(fids[frag]);\r\n        const bbox = struct.getCoordBoundingBox(fragment);\r\n        const calcCenter = center ||\r\n            new Vec2((bbox.max.x + bbox.min.x) / 2, (bbox.max.y + bbox.min.y) / 2);\r\n        fragment.forEach((aid) => {\r\n            const atom = struct.atoms.get(aid);\r\n            const d = flipItemByCenter(atom, calcCenter, dir);\r\n            action.addOp(new AtomMove(aid, d));\r\n        });\r\n        const sgroups = getRelSgroupsBySelection(restruct, Array.from(fragment));\r\n        sgroups.forEach((sg) => {\r\n            const d = flipItemByCenter(sg, calcCenter, dir);\r\n            action.addOp(new SGroupDataMove(sg.id, d));\r\n        });\r\n    });\r\n    flipBonds(selection, struct, action);\r\n    return action.perform(restruct);\r\n}\r\nfunction flipItemByCenter(item, center, dir) {\r\n    const d = new Vec2();\r\n    /* eslint-disable no-mixed-operators */\r\n    if (dir === 'horizontal') {\r\n        d.x =\r\n            center.x > item.pp.x\r\n                ? 2 * (center.x - item.pp.x)\r\n                : -2 * (item.pp.x - center.x);\r\n    }\r\n    else {\r\n        // 'vertical'\r\n        d.y =\r\n            center.y > item.pp.y\r\n                ? 2 * (center.y - item.pp.y)\r\n                : -2 * (item.pp.y - center.y);\r\n    }\r\n    /* eslint-enable no-mixed-operators */\r\n    return d;\r\n}\r\nexport function fromRotate(restruct, selection, center, angle) {\r\n    // eslint-disable-line\r\n    const struct = restruct.molecule;\r\n    const action = new Action();\r\n    if (!selection) {\r\n        selection = structSelection(struct);\r\n    }\r\n    if (selection.atoms) {\r\n        selection.atoms.forEach((aid) => {\r\n            const atom = struct.atoms.get(aid);\r\n            action.addOp(new AtomMove(aid, rotateDelta(atom.pp, center, angle)));\r\n        });\r\n        if (!selection.sgroupData) {\r\n            const sgroups = getRelSgroupsBySelection(restruct, selection.atoms);\r\n            sgroups.forEach((sg) => {\r\n                action.addOp(new SGroupDataMove(sg.id, rotateDelta(sg.pp, center, angle)));\r\n            });\r\n        }\r\n    }\r\n    if (selection.rxnArrows) {\r\n        selection.rxnArrows.forEach((aid) => {\r\n            const arrow = struct.rxnArrows.get(aid);\r\n            action.addOp(new RxnArrowMove(aid, rotateDelta(arrow.center(), center, angle)));\r\n        });\r\n    }\r\n    if (selection.rxnPluses) {\r\n        selection.rxnPluses.forEach((pid) => {\r\n            const plus = struct.rxnPluses.get(pid);\r\n            action.addOp(new RxnPlusMove(pid, rotateDelta(plus.pp, center, angle)));\r\n        });\r\n    }\r\n    if (selection.sgroupData) {\r\n        selection.sgroupData.forEach((did) => {\r\n            const data = struct.sgroups.get(did);\r\n            action.addOp(new SGroupDataMove(did, rotateDelta(data.pp, center, angle)));\r\n        });\r\n    }\r\n    const stereoFlags = selection.enhancedFlags || Array.from(restruct.enhancedFlags.keys());\r\n    if (stereoFlags) {\r\n        stereoFlags.forEach((flagId) => {\r\n            const frId = flagId;\r\n            const frag = restruct.molecule.frags.get(frId);\r\n            action.addOp(new EnhancedFlagMove(flagId, rotateDelta(frag.stereoFlagPosition ||\r\n                Fragment.getDefaultStereoFlagPosition(restruct.molecule, frId), center, angle)));\r\n        });\r\n    }\r\n    return action.perform(restruct);\r\n}\r\nexport function fromBondAlign(restruct, bid, dir) {\r\n    const struct = restruct.molecule;\r\n    const bond = struct.bonds.get(bid);\r\n    const begin = struct.atoms.get(bond.begin);\r\n    const end = struct.atoms.get(bond.end);\r\n    const center = begin.pp.add(end.pp).scaled(0.5);\r\n    let angle = utils.calcAngle(begin.pp, end.pp);\r\n    const atoms = Array.from(struct.getFragmentIds(begin.fragment));\r\n    // TODO: choose minimal angle\r\n    angle = dir === 'horizontal' ? -angle : Math.PI / 2 - angle;\r\n    if (angle === 0 || Math.abs(angle) === Math.PI) {\r\n        return fromFlip(restruct, { atoms }, dir, center);\r\n    }\r\n    return fromRotate(restruct, { atoms }, center, angle);\r\n}\r\nfunction rotateDelta(v, center, angle) {\r\n    let v1 = v.sub(center);\r\n    v1 = v1.rotate(angle);\r\n    v1.add_(center); // eslint-disable-line no-underscore-dangle\r\n    return v1.sub(v);\r\n}\r\n//# sourceMappingURL=rotate.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/utils.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/action.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/shared/utils.js"],"map":"{\"version\":3,\"file\":\"rotate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/actions/rotate.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/actions/rotate.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Action } from './action';\r\nexport declare function fromFlip(restruct: any, selection: any, dir: any, center: any): any;\r\nexport declare function fromRotate(restruct: any, selection: any, center: any, angle: any): Action;\r\nexport declare function fromBondAlign(restruct: any, bid: any, dir: any): any;\r\n"}}

{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RxnArrow, RxnArrowMode, Vec2 } from \"../../../../domain/entities\";\r\nimport Base from '../base';\r\nimport { OperationType } from '../OperationType';\r\nimport { ReRxnArrow } from '../../../render';\r\nclass RxnArrowAdd extends Base {\r\n    data;\r\n    constructor(pos = [], mode = RxnArrowMode.OpenAngle, id) {\r\n        super(OperationType.RXN_ARROW_ADD);\r\n        this.data = { pos, mode, id };\r\n    }\r\n    execute(restruct) {\r\n        const struct = restruct.molecule;\r\n        const item = new RxnArrow({ mode: this.data.mode });\r\n        if (this.data.id == null) {\r\n            const index = struct.rxnArrows.add(item);\r\n            this.data.id = index;\r\n        }\r\n        else {\r\n            struct.rxnArrows.set(this.data.id, item);\r\n        }\r\n        const itemId = this.data.id;\r\n        restruct.rxnArrows.set(itemId, new ReRxnArrow(item));\r\n        const positions = [...this.data.pos];\r\n        struct.rxnArrowSetPos(itemId, positions.map((p) => new Vec2(p)));\r\n        Base.invalidateItem(restruct, 'rxnArrows', itemId, 1);\r\n    }\r\n    invert() {\r\n        return new RxnArrowDelete(this.data.id);\r\n    }\r\n}\r\nclass RxnArrowDelete extends Base {\r\n    data;\r\n    performed;\r\n    constructor(id) {\r\n        super(OperationType.RXN_ARROW_DELETE);\r\n        this.data = { id, pos: [], mode: RxnArrowMode.OpenAngle };\r\n        this.performed = false;\r\n    }\r\n    execute(restruct) {\r\n        const struct = restruct.molecule;\r\n        const item = struct.rxnArrows.get(this.data.id);\r\n        this.data.pos = item.pos;\r\n        this.data.mode = item.mode;\r\n        this.performed = true;\r\n        restruct.markItemRemoved();\r\n        restruct.clearVisel(restruct.rxnArrows.get(this.data.id).visel);\r\n        restruct.rxnArrows.delete(this.data.id);\r\n        struct.rxnArrows.delete(this.data.id);\r\n    }\r\n    invert() {\r\n        return new RxnArrowAdd(this.data.pos, this.data.mode, this.data.id);\r\n    }\r\n}\r\nexport { RxnArrowAdd, RxnArrowDelete };\r\nexport * from './RxnArrowMove';\r\nexport * from './RxnArrowResize';\r\nexport * from './plus';\r\n//# sourceMappingURL=index.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/rxn/RxnArrowMove.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/rxn/RxnArrowResize.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/rxn/plus/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/rxn/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/rxn/index.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RxnArrowMode, Vec2 } from \"../../../../domain/entities\";\r\nimport Base from '../base';\r\ndeclare type RxnArrowAddData = {\r\n    id?: number;\r\n    pos: Array<Vec2>;\r\n    mode: RxnArrowMode;\r\n};\r\ndeclare class RxnArrowAdd extends Base {\r\n    data: RxnArrowAddData;\r\n    constructor(pos?: Array<Vec2>, mode?: RxnArrowMode, id?: number);\r\n    execute(restruct: any): void;\r\n    invert(): Base;\r\n}\r\ninterface RxnArrowDeleteData {\r\n    id: number;\r\n    pos?: Array<Vec2>;\r\n    mode?: RxnArrowMode;\r\n}\r\ndeclare class RxnArrowDelete extends Base {\r\n    data: RxnArrowDeleteData;\r\n    performed: boolean;\r\n    constructor(id: number);\r\n    execute(restruct: any): void;\r\n    invert(): Base;\r\n}\r\nexport { RxnArrowAdd, RxnArrowDelete };\r\nexport * from './RxnArrowMove';\r\nexport * from './RxnArrowResize';\r\nexport * from './plus';\r\n"}}

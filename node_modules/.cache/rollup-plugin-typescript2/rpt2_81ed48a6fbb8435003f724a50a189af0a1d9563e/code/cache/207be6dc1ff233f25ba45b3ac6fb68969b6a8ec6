{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Bond, FunctionalGroup, Vec2 } from \"../../../domain/entities\";\r\nimport { LayerMap, StereoColoringType } from './generalEnumTypes';\r\nimport { getColorFromStereoLabel } from './reatom';\r\nimport ReObject from './reobject';\r\nimport { Scale } from \"../../../domain/helpers\";\r\nimport draw from '../draw';\r\nimport util from '../util';\r\nclass ReBond extends ReObject {\r\n    b;\r\n    doubleBondShift;\r\n    path;\r\n    neihbid1 = -1;\r\n    neihbid2 = -1;\r\n    boldStereo;\r\n    rbb;\r\n    constructor(bond) {\r\n        super('bond');\r\n        this.b = bond; // TODO rename b to item\r\n        this.doubleBondShift = 0;\r\n    }\r\n    static isSelectable() {\r\n        return true;\r\n    }\r\n    drawHover(render) {\r\n        const ret = this.makeHoverPlate(render);\r\n        render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\r\n        return ret;\r\n    }\r\n    makeHoverPlate(render) {\r\n        const options = render.options;\r\n        bondRecalc(this, render.ctab, options);\r\n        const bond = this.b;\r\n        const sgroups = render.ctab.sgroups;\r\n        const functionalGroups = render.ctab.molecule.functionalGroups;\r\n        if (FunctionalGroup.isBondInContractedFunctionalGroup(bond, sgroups, functionalGroups)) {\r\n            return null;\r\n        }\r\n        const c = Scale.obj2scaled(this.b.center, options);\r\n        return render.paper\r\n            .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\r\n            .attr(options.hoverStyle);\r\n    }\r\n    makeSelectionPlate(restruct, paper, options) {\r\n        bondRecalc(this, restruct, options);\r\n        const bond = this.b;\r\n        const sgroups = restruct.render.ctab.sgroups;\r\n        const functionalGroups = restruct.render.ctab.molecule.functionalGroups;\r\n        if (FunctionalGroup.isBondInContractedFunctionalGroup(bond, sgroups, functionalGroups)) {\r\n            return null;\r\n        }\r\n        const c = Scale.obj2scaled(this.b.center, options);\r\n        return paper\r\n            .circle(c.x, c.y, 0.8 * options.atomSelectionPlateRadius)\r\n            .attr(options.selectionStyle);\r\n    }\r\n    show(restruct, bid, options) {\r\n        // eslint-disable-line max-statements\r\n        const render = restruct.render;\r\n        const struct = restruct.molecule;\r\n        const bond = restruct.molecule.bonds.get(bid);\r\n        const sgroups = restruct.molecule.sgroups;\r\n        const functionalGroups = restruct.molecule.functionalGroups;\r\n        if (bond &&\r\n            FunctionalGroup.isBondInContractedFunctionalGroup(bond, sgroups, functionalGroups)) {\r\n            return;\r\n        }\r\n        const paper = render.paper;\r\n        const hb1 = this.b.hb1 !== undefined ? struct.halfBonds.get(this.b.hb1) : null;\r\n        const hb2 = this.b.hb2 !== undefined ? struct.halfBonds.get(this.b.hb2) : null;\r\n        checkStereoBold(bid, this, restruct);\r\n        bondRecalc(this, restruct, options);\r\n        setDoubleBondShift(this, struct);\r\n        if (!hb1 || !hb2)\r\n            return;\r\n        this.path = getBondPath(restruct, this, hb1, hb2);\r\n        this.rbb = util.relBox(this.path.getBBox());\r\n        restruct.addReObjectPath(LayerMap.data, this.visel, this.path, null, true);\r\n        const reactingCenter = {};\r\n        reactingCenter.path = getReactingCenterPath(render, this, hb1, hb2);\r\n        if (reactingCenter.path) {\r\n            reactingCenter.rbb = util.relBox(reactingCenter.path.getBBox());\r\n            restruct.addReObjectPath(LayerMap.data, this.visel, reactingCenter.path, null, true);\r\n        }\r\n        const topology = {};\r\n        topology.path = getTopologyMark(render, this, hb1, hb2);\r\n        if (topology.path) {\r\n            topology.rbb = util.relBox(topology.path.getBBox());\r\n            restruct.addReObjectPath(LayerMap.data, this.visel, topology.path, null, true);\r\n        }\r\n        this.setHover(this.hover, render);\r\n        let ipath = null;\r\n        const bondIdxOff = options.subFontSize * 0.6;\r\n        if (options.showBondIds) {\r\n            ipath = getIdsPath(bid, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);\r\n            restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\r\n        }\r\n        if (options.showHalfBondIds) {\r\n            ipath = getIdsPath(this.b.hb1, paper, hb1, hb2, bondIdxOff, 0.8, 0.2, hb1.norm);\r\n            restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\r\n            ipath = getIdsPath(this.b.hb2, paper, hb1, hb2, bondIdxOff, 0.2, 0.8, hb2.norm);\r\n            restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\r\n        }\r\n        if (options.showLoopIds && !options.showBondIds) {\r\n            ipath = getIdsPath(hb1.loop, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb2.norm);\r\n            restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\r\n            ipath = getIdsPath(hb2.loop, paper, hb1, hb2, bondIdxOff, 0.5, 0.5, hb1.norm);\r\n            restruct.addReObjectPath(LayerMap.indices, this.visel, ipath);\r\n        }\r\n        // Checking whether bond is highlighted and what is the last color\r\n        const highlights = restruct.molecule.highlights;\r\n        let isHighlighted = false;\r\n        let highlightColor = '';\r\n        highlights.forEach((highlight) => {\r\n            const hasCurrentHighlight = highlight.bonds?.includes(bid);\r\n            isHighlighted = isHighlighted || hasCurrentHighlight;\r\n            if (hasCurrentHighlight) {\r\n                highlightColor = highlight.color;\r\n            }\r\n        });\r\n        // Drawing highlight\r\n        if (isHighlighted) {\r\n            const style = {\r\n                fill: highlightColor,\r\n                stroke: highlightColor,\r\n                'stroke-width': options.lineattr['stroke-width'] * 7,\r\n                'stroke-linecap': 'round'\r\n            };\r\n            const c = Scale.obj2scaled(this.b.center, restruct.render.options);\r\n            const highlightPath = getHighlightPath(restruct, hb1, hb2);\r\n            highlightPath.attr(style);\r\n            restruct.addReObjectPath(LayerMap.hovering, this.visel, highlightPath, c, true);\r\n        }\r\n    }\r\n}\r\nfunction getHighlightPath(restruct, hb1, hb2) {\r\n    const beginning = { x: hb1.p.x, y: hb1.p.y };\r\n    const end = { x: hb2.p.x, y: hb2.p.y };\r\n    const paper = restruct.render.paper;\r\n    const pathString = `M${beginning.x},${beginning.y} L${end.x},${end.y}`;\r\n    const path = paper.path(pathString);\r\n    return path;\r\n}\r\nfunction findIncomingStereoUpBond(atom, bid0, includeBoldStereoBond, restruct) {\r\n    return atom.neighbors.findIndex((hbid) => {\r\n        const hb = restruct.molecule.halfBonds.get(hbid);\r\n        if (!hb || hb.bid === bid0)\r\n            return false;\r\n        const neibond = restruct.bonds.get(hb.bid);\r\n        if (!neibond)\r\n            return false;\r\n        const singleUp = neibond.b.type === Bond.PATTERN.TYPE.SINGLE &&\r\n            neibond.b.stereo === Bond.PATTERN.STEREO.UP;\r\n        if (singleUp) {\r\n            return (neibond.b.end === hb.begin ||\r\n                (neibond.boldStereo && includeBoldStereoBond));\r\n        }\r\n        return !!(neibond.b.type === Bond.PATTERN.TYPE.DOUBLE &&\r\n            neibond.b.stereo === Bond.PATTERN.STEREO.NONE &&\r\n            includeBoldStereoBond &&\r\n            neibond.boldStereo);\r\n    });\r\n}\r\nfunction findIncomingUpBonds(bid0, bond, restruct) {\r\n    const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\r\n        const atom = restruct.molecule.atoms.get(aid);\r\n        if (!atom)\r\n            return -1;\r\n        const pos = findIncomingStereoUpBond(atom, bid0, true, restruct);\r\n        return pos < 0 ? -1 : atom.neighbors[pos];\r\n    });\r\n    bond.neihbid1 = restruct.atoms.get(bond.b.begin)?.showLabel\r\n        ? -1\r\n        : halfbonds[0];\r\n    bond.neihbid2 = restruct.atoms.get(bond.b.end)?.showLabel ? -1 : halfbonds[1];\r\n}\r\nfunction checkStereoBold(bid0, bond, restruct) {\r\n    const halfbonds = [bond.b.begin, bond.b.end].map((aid) => {\r\n        const atom = restruct.molecule.atoms.get(aid);\r\n        const pos = findIncomingStereoUpBond(atom, bid0, false, restruct);\r\n        return pos < 0 ? -1 : atom.neighbors[pos];\r\n    });\r\n    bond.boldStereo = halfbonds[0] >= 0 && halfbonds[1] >= 0;\r\n}\r\nfunction getBondPath(restruct, bond, hb1, hb2) {\r\n    let path = null;\r\n    const render = restruct.render;\r\n    const struct = restruct.molecule;\r\n    const shiftA = !restruct.atoms.get(hb1.begin)?.showLabel;\r\n    const shiftB = !restruct.atoms.get(hb2.begin)?.showLabel;\r\n    switch (bond.b.type) {\r\n        case Bond.PATTERN.TYPE.SINGLE:\r\n            switch (bond.b.stereo) {\r\n                case Bond.PATTERN.STEREO.UP:\r\n                    findIncomingUpBonds(hb1.bid, bond, restruct);\r\n                    if (bond.boldStereo && bond.neihbid1 >= 0 && bond.neihbid2 >= 0) {\r\n                        path = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct);\r\n                    }\r\n                    else\r\n                        path = getBondSingleUpPath(render, hb1, hb2, bond, struct);\r\n                    break;\r\n                case Bond.PATTERN.STEREO.DOWN:\r\n                    path = getBondSingleDownPath(render, hb1, hb2, bond, struct);\r\n                    break;\r\n                case Bond.PATTERN.STEREO.EITHER:\r\n                    path = getBondSingleEitherPath(render, hb1, hb2, bond, struct);\r\n                    break;\r\n                default:\r\n                    path = draw.bondSingle(render.paper, hb1, hb2, render.options, getStereoBondColor(render.options, bond, struct));\r\n                    break;\r\n            }\r\n            break;\r\n        case Bond.PATTERN.TYPE.DOUBLE:\r\n            findIncomingUpBonds(hb1.bid, bond, restruct);\r\n            if (bond.b.stereo === Bond.PATTERN.STEREO.NONE &&\r\n                bond.boldStereo &&\r\n                bond.neihbid1 >= 0 &&\r\n                bond.neihbid2 >= 0) {\r\n                path = getBondDoubleStereoBoldPath(render, hb1, hb2, bond, struct, shiftA, shiftB);\r\n            }\r\n            else\r\n                path = getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB);\r\n            break;\r\n        case Bond.PATTERN.TYPE.TRIPLE:\r\n            path = draw.bondTriple(render.paper, hb1, hb2, render.options);\r\n            break;\r\n        case Bond.PATTERN.TYPE.AROMATIC: {\r\n            const inAromaticLoop = (hb1.loop >= 0 && struct.loops.get(hb1.loop)?.aromatic) ||\r\n                (hb2.loop >= 0 && struct.loops.get(hb2.loop)?.aromatic);\r\n            path = inAromaticLoop\r\n                ? draw.bondSingle(render.paper, hb1, hb2, render.options)\r\n                : getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);\r\n            break;\r\n        }\r\n        case Bond.PATTERN.TYPE.SINGLE_OR_DOUBLE:\r\n            path = getSingleOrDoublePath(render, hb1, hb2);\r\n            break;\r\n        case Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC:\r\n            path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);\r\n            break;\r\n        case Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC:\r\n            path = getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB);\r\n            break;\r\n        case Bond.PATTERN.TYPE.ANY:\r\n            path = draw.bondAny(render.paper, hb1, hb2, render.options);\r\n            break;\r\n        case Bond.PATTERN.TYPE.HYDROGEN:\r\n            path = draw.bondHydrogen(render.paper, hb1, hb2, render.options);\r\n            break;\r\n        case Bond.PATTERN.TYPE.DATIVE:\r\n            path = draw.bondDative(render.paper, hb1, hb2, render.options);\r\n            break;\r\n        default:\r\n            throw new Error('Bond type ' + bond.b.type + ' not supported');\r\n    }\r\n    return path;\r\n}\r\n/* Get Path */\r\nfunction getBondSingleUpPath(render, hb1, hb2, bond, struct) {\r\n    // eslint-disable-line max-params\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const n = hb1.norm;\r\n    const options = render.options;\r\n    const bsp = 0.7 * options.stereoBond;\r\n    let b2 = b.addScaled(n, bsp);\r\n    let b3 = b.addScaled(n, -bsp);\r\n    if (bond.neihbid2 >= 0) {\r\n        // if the end is shared with another up-bond heading this way\r\n        const coords = stereoUpBondGetCoordinates(hb2, bond.neihbid2, options.stereoBond, struct);\r\n        b2 = coords[0];\r\n        b3 = coords[1];\r\n    }\r\n    return draw.bondSingleUp(render.paper, a, b2, b3, options, getStereoBondColor(options, bond, struct));\r\n}\r\nfunction getStereoBondColor(options, bond, struct) {\r\n    const defaultColor = '#000';\r\n    if (bond.b.stereo === 0)\r\n        return defaultColor;\r\n    const beginAtomStereoLabel = struct.atoms.get(bond.b.begin)?.stereoLabel;\r\n    const endAtomStereoLabel = struct.atoms.get(bond.b.end)?.stereoLabel;\r\n    let stereoLabel = '';\r\n    if (beginAtomStereoLabel && !endAtomStereoLabel) {\r\n        stereoLabel = beginAtomStereoLabel;\r\n    }\r\n    else if (!beginAtomStereoLabel && endAtomStereoLabel) {\r\n        stereoLabel = endAtomStereoLabel;\r\n    }\r\n    if (\r\n    // if no stereolabel presents or presents in both then use default color\r\n    !stereoLabel ||\r\n        options.colorStereogenicCenters === StereoColoringType.Off ||\r\n        options.colorStereogenicCenters === StereoColoringType.LabelsOnly) {\r\n        return defaultColor;\r\n    }\r\n    return getColorFromStereoLabel(options, stereoLabel);\r\n}\r\nfunction getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct) {\r\n    // eslint-disable-line max-params\r\n    const options = render.options;\r\n    const coords1 = stereoUpBondGetCoordinates(hb1, bond.neihbid1, options.stereoBond, struct);\r\n    const coords2 = stereoUpBondGetCoordinates(hb2, bond.neihbid2, options.stereoBond, struct);\r\n    const a1 = coords1[0];\r\n    const a2 = coords1[1];\r\n    const a3 = coords2[0];\r\n    const a4 = coords2[1];\r\n    return draw.bondSingleStereoBold(render.paper, a1, a2, a3, a4, options, getStereoBondColor(options, bond, struct));\r\n}\r\nfunction getBondDoubleStereoBoldPath(render, hb1, hb2, bond, struct, shiftA, shiftB) {\r\n    // eslint-disable-line max-params\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const n = hb1.norm;\r\n    const shift = bond.doubleBondShift;\r\n    const bsp = 1.5 * render.options.stereoBond;\r\n    let b1 = a.addScaled(n, bsp * shift);\r\n    let b2 = b.addScaled(n, bsp * shift);\r\n    if (shift > 0) {\r\n        if (shiftA) {\r\n            b1 = b1.addScaled(hb1.dir, bsp * getBondLineShift(hb1.rightCos, hb1.rightSin));\r\n        }\r\n        if (shiftB) {\r\n            b2 = b2.addScaled(hb1.dir, -bsp * getBondLineShift(hb2.leftCos, hb2.leftSin));\r\n        }\r\n    }\r\n    else if (shift < 0) {\r\n        if (shiftA) {\r\n            b1 = b1.addScaled(hb1.dir, bsp * getBondLineShift(hb1.leftCos, hb1.leftSin));\r\n        }\r\n        if (shiftB) {\r\n            b2 = b2.addScaled(hb1.dir, -bsp * getBondLineShift(hb2.rightCos, hb2.rightSin));\r\n        }\r\n    }\r\n    const sgBondPath = getBondSingleStereoBoldPath(render, hb1, hb2, bond, struct);\r\n    return draw.bondDoubleStereoBold(render.paper, sgBondPath, b1, b2, render.options, getStereoBondColor(render.options, bond, struct));\r\n}\r\nfunction getBondLineShift(cos, sin) {\r\n    if (sin < 0 || Math.abs(cos) > 0.9)\r\n        return 0;\r\n    return sin / (1 - cos);\r\n}\r\nfunction stereoUpBondGetCoordinates(hb, neihbid, bondSpace, struct) {\r\n    const neihb = struct.halfBonds.get(neihbid);\r\n    const cos = Vec2.dot(hb.dir, neihb.dir);\r\n    const sin = Vec2.cross(hb.dir, neihb.dir);\r\n    const cosHalf = Math.sqrt(0.5 * (1 - cos));\r\n    const biss = neihb.dir.rotateSC((sin >= 0 ? -1 : 1) * cosHalf, Math.sqrt(0.5 * (1 + cos)));\r\n    const denomAdd = 0.3;\r\n    const scale = 0.7;\r\n    const a1 = hb.p.addScaled(biss, (scale * bondSpace) / (cosHalf + denomAdd));\r\n    const a2 = hb.p.addScaled(biss.negated(), (scale * bondSpace) / (cosHalf + denomAdd));\r\n    return sin > 0 ? [a1, a2] : [a2, a1];\r\n}\r\nfunction getBondSingleDownPath(render, hb1, hb2, bond, struct) {\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const options = render.options;\r\n    let d = b.sub(a);\r\n    const len = d.length() + 0.2;\r\n    d = d.normalized();\r\n    const interval = 1.2 * options.lineWidth;\r\n    const nlines = Math.max(Math.floor((len - options.lineWidth) / (options.lineWidth + interval)), 0) + 2;\r\n    const step = len / (nlines - 1);\r\n    return draw.bondSingleDown(render.paper, hb1, d, nlines, step, options, getStereoBondColor(options, bond, struct));\r\n}\r\nfunction getBondSingleEitherPath(render, hb1, hb2, bond, struct) {\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const options = render.options;\r\n    let d = b.sub(a);\r\n    const len = d.length();\r\n    d = d.normalized();\r\n    const interval = 0.6 * options.lineWidth;\r\n    const nlines = Math.max(Math.floor((len - options.lineWidth) / (options.lineWidth + interval)), 0) + 2;\r\n    const step = len / (nlines - 0.5);\r\n    return draw.bondSingleEither(render.paper, hb1, d, nlines, step, options, getStereoBondColor(options, bond, struct));\r\n}\r\nfunction getBondDoublePath(render, hb1, hb2, bond, shiftA, shiftB) {\r\n    // eslint-disable-line max-params, max-statements\r\n    const cisTrans = bond.b.stereo === Bond.PATTERN.STEREO.CIS_TRANS;\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const n = hb1.norm;\r\n    const shift = cisTrans ? 0 : bond.doubleBondShift;\r\n    const options = render.options;\r\n    const bsp = options.bondSpace / 2;\r\n    const s1 = bsp + shift * bsp;\r\n    const s2 = -bsp + shift * bsp;\r\n    let a1 = a.addScaled(n, s1);\r\n    let b1 = b.addScaled(n, s1);\r\n    let a2 = a.addScaled(n, s2);\r\n    let b2 = b.addScaled(n, s2);\r\n    if (shift > 0) {\r\n        if (shiftA) {\r\n            a1 = a1.addScaled(hb1.dir, options.bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin));\r\n        }\r\n        if (shiftB) {\r\n            b1 = b1.addScaled(hb1.dir, -options.bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin));\r\n        }\r\n    }\r\n    else if (shift < 0) {\r\n        if (shiftA) {\r\n            a2 = a2.addScaled(hb1.dir, options.bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin));\r\n        }\r\n        if (shiftB) {\r\n            b2 = b2.addScaled(hb1.dir, -options.bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin));\r\n        }\r\n    }\r\n    return draw.bondDouble(render.paper, a1, a2, b1, b2, cisTrans, options);\r\n}\r\nfunction getSingleOrDoublePath(render, hb1, hb2) {\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const options = render.options;\r\n    let nSect = Vec2.dist(a, b) / Number((options.bondSpace + options.lineWidth).toFixed());\r\n    if (!(nSect & 1))\r\n        nSect += 1;\r\n    return draw.bondSingleOrDouble(render.paper, hb1, hb2, nSect, options);\r\n}\r\nfunction getBondAromaticPath(render, hb1, hb2, bond, shiftA, shiftB) {\r\n    // eslint-disable-line max-params\r\n    const dashdotPattern = [0.125, 0.125, 0.005, 0.125];\r\n    let mark = null;\r\n    let dash = null;\r\n    const options = render.options;\r\n    const bondShift = bond.doubleBondShift;\r\n    if (bond.b.type === Bond.PATTERN.TYPE.SINGLE_OR_AROMATIC) {\r\n        mark = bondShift > 0 ? 1 : 2;\r\n        dash = dashdotPattern.map((v) => v * options.scale);\r\n    }\r\n    if (bond.b.type === Bond.PATTERN.TYPE.DOUBLE_OR_AROMATIC) {\r\n        mark = 3;\r\n        dash = dashdotPattern.map((v) => v * options.scale);\r\n    }\r\n    const paths = getAromaticBondPaths(hb1, hb2, bondShift, shiftA, shiftB, options.bondSpace, mark, dash);\r\n    return draw.bondAromatic(render.paper, paths, bondShift, options);\r\n}\r\nfunction getAromaticBondPaths(hb1, hb2, shift, shiftA, shiftB, bondSpace, mask, dash) {\r\n    // eslint-disable-line max-params, max-statements\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const n = hb1.norm;\r\n    const bsp = bondSpace / 2;\r\n    const s1 = bsp + shift * bsp;\r\n    const s2 = -bsp + shift * bsp;\r\n    let a2 = a.addScaled(n, s1);\r\n    let b2 = b.addScaled(n, s1);\r\n    let a3 = a.addScaled(n, s2);\r\n    let b3 = b.addScaled(n, s2);\r\n    if (shift > 0) {\r\n        if (shiftA) {\r\n            a2 = a2.addScaled(hb1.dir, bondSpace * getBondLineShift(hb1.rightCos, hb1.rightSin));\r\n        }\r\n        if (shiftB) {\r\n            b2 = b2.addScaled(hb1.dir, -bondSpace * getBondLineShift(hb2.leftCos, hb2.leftSin));\r\n        }\r\n    }\r\n    else if (shift < 0) {\r\n        if (shiftA) {\r\n            a3 = a3.addScaled(hb1.dir, bondSpace * getBondLineShift(hb1.leftCos, hb1.leftSin));\r\n        }\r\n        if (shiftB) {\r\n            b3 = b3.addScaled(hb1.dir, -bondSpace * getBondLineShift(hb2.rightCos, hb2.rightSin));\r\n        }\r\n    }\r\n    return draw.aromaticBondPaths(a2, a3, b2, b3, mask, dash);\r\n}\r\nfunction getReactingCenterPath(render, bond, hb1, hb2) {\r\n    // eslint-disable-line max-statements\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const c = b.add(a).scaled(0.5);\r\n    const d = b.sub(a).normalized();\r\n    const n = d.rotateSC(1, 0);\r\n    const p = [];\r\n    const lw = render.options.lineWidth;\r\n    const bs = render.options.bondSpace / 2;\r\n    const alongIntRc = lw; // half interval along for CENTER\r\n    const alongIntMadeBroken = 2 * lw; // half interval between along for MADE_OR_BROKEN\r\n    const alongSz = 1.5 * bs; // half size along for CENTER\r\n    const acrossInt = 1.5 * bs; // half interval across for CENTER\r\n    const acrossSz = 3.0 * bs; // half size across for all\r\n    const tiltTan = 0.2; // tangent of the tilt angle\r\n    switch (bond.b.reactingCenterStatus) {\r\n        case Bond.PATTERN.REACTING_CENTER.NOT_CENTER: // X\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, tiltTan * acrossSz));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, -tiltTan * acrossSz));\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, -tiltTan * acrossSz));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, tiltTan * acrossSz));\r\n            break;\r\n        case Bond.PATTERN.REACTING_CENTER.CENTER: // #\r\n            p.push(c\r\n                .addScaled(n, acrossSz)\r\n                .addScaled(d, tiltTan * acrossSz)\r\n                .addScaled(d, alongIntRc));\r\n            p.push(c\r\n                .addScaled(n, -acrossSz)\r\n                .addScaled(d, -tiltTan * acrossSz)\r\n                .addScaled(d, alongIntRc));\r\n            p.push(c\r\n                .addScaled(n, acrossSz)\r\n                .addScaled(d, tiltTan * acrossSz)\r\n                .addScaled(d, -alongIntRc));\r\n            p.push(c\r\n                .addScaled(n, -acrossSz)\r\n                .addScaled(d, -tiltTan * acrossSz)\r\n                .addScaled(d, -alongIntRc));\r\n            p.push(c.addScaled(d, alongSz).addScaled(n, acrossInt));\r\n            p.push(c.addScaled(d, -alongSz).addScaled(n, acrossInt));\r\n            p.push(c.addScaled(d, alongSz).addScaled(n, -acrossInt));\r\n            p.push(c.addScaled(d, -alongSz).addScaled(n, -acrossInt));\r\n            break;\r\n        // case Bond.PATTERN.REACTING_CENTER.UNCHANGED: draw a circle\r\n        case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN:\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\r\n            break;\r\n        case Bond.PATTERN.REACTING_CENTER.ORDER_CHANGED:\r\n            p.push(c.addScaled(n, acrossSz));\r\n            p.push(c.addScaled(n, -acrossSz));\r\n            break;\r\n        case Bond.PATTERN.REACTING_CENTER.MADE_OR_BROKEN_AND_CHANGED:\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, alongIntMadeBroken));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, alongIntMadeBroken));\r\n            p.push(c.addScaled(n, acrossSz).addScaled(d, -alongIntMadeBroken));\r\n            p.push(c.addScaled(n, -acrossSz).addScaled(d, -alongIntMadeBroken));\r\n            p.push(c.addScaled(n, acrossSz));\r\n            p.push(c.addScaled(n, -acrossSz));\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n    return draw.reactingCenter(render.paper, p, render.options);\r\n}\r\nfunction getTopologyMark(render, bond, hb1, hb2) {\r\n    // eslint-disable-line max-statements\r\n    const options = render.options;\r\n    let mark = null;\r\n    if (bond.b.topology === Bond.PATTERN.TOPOLOGY.RING)\r\n        mark = 'rng';\r\n    else if (bond.b.topology === Bond.PATTERN.TOPOLOGY.CHAIN)\r\n        mark = 'chn';\r\n    else\r\n        return null;\r\n    const a = hb1.p;\r\n    const b = hb2.p;\r\n    const c = b.add(a).scaled(0.5);\r\n    const d = b.sub(a).normalized();\r\n    let n = d.rotateSC(1, 0);\r\n    let fixed = options.lineWidth;\r\n    if (bond.doubleBondShift > 0)\r\n        n = n.scaled(-bond.doubleBondShift);\r\n    else if (bond.doubleBondShift === 0)\r\n        fixed += options.bondSpace / 2;\r\n    const s = new Vec2(2, 1).scaled(options.bondSpace);\r\n    if (bond.b.type === Bond.PATTERN.TYPE.TRIPLE)\r\n        fixed += options.bondSpace;\r\n    const p = c.add(new Vec2(n.x * (s.x + fixed), n.y * (s.y + fixed)));\r\n    return draw.topologyMark(render.paper, p, mark, options);\r\n}\r\nfunction getIdsPath(bid, paper, hb1, hb2, bondIdxOff, param1, param2, norm) {\r\n    // eslint-disable-line max-params\r\n    const pb = Vec2.lc(hb1.p, param1, hb2.p, param2, norm, bondIdxOff);\r\n    const ipath = paper.text(pb.x, pb.y, bid.toString());\r\n    const irbb = util.relBox(ipath.getBBox());\r\n    draw.recenterText(ipath, irbb);\r\n    return ipath;\r\n}\r\n/* ----- */\r\nfunction setDoubleBondShift(bond, struct) {\r\n    const hb1 = bond.b.hb1;\r\n    const hb2 = bond.b.hb2;\r\n    if ((!hb1 && hb1 !== 0) || (!hb2 && hb2 !== 0)) {\r\n        bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\r\n        return;\r\n    }\r\n    const loop1 = struct.halfBonds.get(hb1).loop;\r\n    const loop2 = struct.halfBonds.get(hb2).loop;\r\n    if (loop1 >= 0 && loop2 >= 0) {\r\n        const d1 = struct.loops.get(loop1).dblBonds;\r\n        const d2 = struct.loops.get(loop2).dblBonds;\r\n        const n1 = struct.loops.get(loop1).hbs.length;\r\n        const n2 = struct.loops.get(loop2).hbs.length;\r\n        bond.doubleBondShift = selectDoubleBondShift(n1, n2, d1, d2);\r\n    }\r\n    else if (loop1 >= 0) {\r\n        bond.doubleBondShift = -1;\r\n    }\r\n    else if (loop2 >= 0) {\r\n        bond.doubleBondShift = 1;\r\n    }\r\n    else {\r\n        bond.doubleBondShift = selectDoubleBondShiftChain(struct, bond);\r\n    }\r\n}\r\nfunction bondRecalc(bond, restruct, options) {\r\n    const render = restruct.render;\r\n    const atom1 = restruct.atoms.get(bond.b.begin);\r\n    const atom2 = restruct.atoms.get(bond.b.end);\r\n    if (!atom1 ||\r\n        !atom2 ||\r\n        bond.b.hb1 === undefined ||\r\n        bond.b.hb2 === undefined) {\r\n        return;\r\n    }\r\n    const p1 = Scale.obj2scaled(atom1.a.pp, render.options);\r\n    const p2 = Scale.obj2scaled(atom2.a.pp, render.options);\r\n    const hb1 = restruct.molecule.halfBonds.get(bond.b.hb1);\r\n    const hb2 = restruct.molecule.halfBonds.get(bond.b.hb2);\r\n    if (!hb1?.dir || !hb2?.dir)\r\n        return;\r\n    hb1.p = shiftBondEnd(atom1, p1, hb1.dir, 2 * options.lineWidth);\r\n    hb2.p = shiftBondEnd(atom2, p2, hb2.dir, 2 * options.lineWidth);\r\n    bond.b.center = Vec2.lc2(atom1.a.pp, 0.5, atom2.a.pp, 0.5);\r\n    bond.b.len = Vec2.dist(p1, p2);\r\n    bond.b.sb = options.lineWidth * 5;\r\n    /* eslint-disable no-mixed-operators */\r\n    bond.b.sa = Math.max(bond.b.sb, bond.b.len / 2 - options.lineWidth * 2);\r\n    /* eslint-enable no-mixed-operators */\r\n    bond.b.angle = (Math.atan2(hb1.dir.y, hb1.dir.x) * 180) / Math.PI;\r\n}\r\nfunction shiftBondEnd(atom, pos0, dir, margin) {\r\n    let t = 0;\r\n    const visel = atom.visel;\r\n    for (let k = 0; k < visel.exts.length; ++k) {\r\n        const box = visel.exts[k].translate(pos0);\r\n        t = Math.max(t, util.shiftRayBox(pos0, dir, box));\r\n    }\r\n    if (t > 0)\r\n        pos0 = pos0.addScaled(dir, t + margin);\r\n    return pos0;\r\n}\r\nfunction selectDoubleBondShift(n1, n2, d1, d2) {\r\n    if (n1 === 6 && n2 !== 6 && (d1 > 1 || d2 === 1))\r\n        return -1;\r\n    if (n2 === 6 && n1 !== 6 && (d2 > 1 || d1 === 1))\r\n        return 1;\r\n    if (n2 * d1 > n1 * d2)\r\n        return -1;\r\n    if (n2 * d1 < n1 * d2)\r\n        return 1;\r\n    if (n2 > n1)\r\n        return -1;\r\n    return 1;\r\n}\r\nfunction selectDoubleBondShiftChain(struct, bond) {\r\n    if ((!bond.b.hb1 && bond.b.hb1 !== 0) || (!bond.b.hb2 && bond.b.hb2 !== 0)) {\r\n        return 0;\r\n    }\r\n    const hb1 = struct.halfBonds.get(bond.b.hb1);\r\n    const hb2 = struct.halfBonds.get(bond.b.hb2);\r\n    if (!hb1 || !hb2)\r\n        return 0;\r\n    const nLeft = (hb1.leftSin > 0.3 ? 1 : 0) + (hb2.rightSin > 0.3 ? 1 : 0);\r\n    const nRight = (hb2.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0);\r\n    if (nLeft > nRight)\r\n        return -1;\r\n    if (nLeft < nRight)\r\n        return 1;\r\n    if ((hb1.leftSin > 0.3 ? 1 : 0) + (hb1.rightSin > 0.3 ? 1 : 0) === 1)\r\n        return 1;\r\n    return 0;\r\n}\r\nexport default ReBond;\r\n//# sourceMappingURL=rebond.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/generalEnumTypes.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/reatom.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/reobject.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/restruct.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/raphaelRender.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/helpers/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/draw.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/util.ts"],"map":"{\"version\":3,\"file\":\"rebond.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/render/restruct/rebond.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/render/restruct/rebond.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Bond } from \"../../../domain/entities\";\r\nimport ReObject from './reobject';\r\nimport ReStruct from './restruct';\r\nimport { Render } from '../raphaelRender';\r\ndeclare class ReBond extends ReObject {\r\n    b: Bond;\r\n    doubleBondShift: number;\r\n    path: any;\r\n    neihbid1: number;\r\n    neihbid2: number;\r\n    boldStereo?: boolean;\r\n    rbb?: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        height: number;\r\n    };\r\n    constructor(bond: Bond);\r\n    static isSelectable(): boolean;\r\n    drawHover(render: Render): any;\r\n    makeHoverPlate(render: Render): any;\r\n    makeSelectionPlate(restruct: ReStruct, paper: any, options: any): any;\r\n    show(restruct: ReStruct, bid: number, options: any): void;\r\n}\r\nexport default ReBond;\r\n"}}

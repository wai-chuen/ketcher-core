{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Vec2 } from './vec2';\r\nimport { Bond } from './bond';\r\nimport { StereoLabel } from './atom';\r\nexport var StereoFlag;\r\n(function (StereoFlag) {\r\n    StereoFlag[\"Mixed\"] = \"MIXED\";\r\n    StereoFlag[\"Abs\"] = \"ABS\";\r\n    StereoFlag[\"And\"] = \"AND\";\r\n    StereoFlag[\"Or\"] = \"OR\";\r\n})(StereoFlag || (StereoFlag = {}));\r\nfunction calcStereoFlag(struct, stereoAids) {\r\n    if (!stereoAids || stereoAids.length === 0)\r\n        return undefined;\r\n    const filteredStereoAtoms = stereoAids\r\n        .map((aid) => struct.atoms.get(aid))\r\n        .filter((atom) => atom?.stereoLabel);\r\n    if (!filteredStereoAtoms.length)\r\n        return undefined;\r\n    const atom = filteredStereoAtoms[0];\r\n    const stereoLabel = atom.stereoLabel; // {string | null} \"<abs|and|or>-<group>\"\r\n    const hasAnotherLabel = filteredStereoAtoms.some((atom) => atom?.stereoLabel !== stereoLabel);\r\n    let stereoFlag;\r\n    if (hasAnotherLabel) {\r\n        stereoFlag = StereoFlag.Mixed;\r\n    }\r\n    else {\r\n        const label = stereoLabel.match(/\\D+/g)?.[0];\r\n        switch (label) {\r\n            case StereoLabel.Abs: {\r\n                stereoFlag = StereoFlag.Abs;\r\n                break;\r\n            }\r\n            case StereoLabel.And: {\r\n                stereoFlag = StereoFlag.And;\r\n                break;\r\n            }\r\n            case StereoLabel.Or: {\r\n                stereoFlag = StereoFlag.Or;\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error(`Unsupported stereo label: ${label}.`);\r\n            }\r\n        }\r\n    }\r\n    return stereoFlag;\r\n}\r\nexport class Fragment {\r\n    #enhancedStereoFlag;\r\n    stereoFlagPosition;\r\n    #stereoAtoms;\r\n    get stereoAtoms() {\r\n        return [...this.#stereoAtoms];\r\n    }\r\n    get enhancedStereoFlag() {\r\n        return this.#enhancedStereoFlag;\r\n    }\r\n    constructor(stereoAtoms = [], stereoFlagPosition) {\r\n        if (stereoFlagPosition) {\r\n            this.stereoFlagPosition = new Vec2(stereoFlagPosition);\r\n        }\r\n        this.#stereoAtoms = stereoAtoms;\r\n    }\r\n    static getDefaultStereoFlagPosition(struct, fragmentId) {\r\n        const fragment = struct.getFragment(fragmentId);\r\n        if (!fragment)\r\n            return undefined;\r\n        const bb = fragment.getCoordBoundingBox();\r\n        return new Vec2(bb.max.x, bb.min.y - 1);\r\n    }\r\n    clone(aidMap) {\r\n        const stereoAtoms = this.#stereoAtoms.map((aid) => aidMap.get(aid));\r\n        const fr = new Fragment(stereoAtoms, this.stereoFlagPosition);\r\n        fr.#enhancedStereoFlag = this.#enhancedStereoFlag;\r\n        return fr;\r\n    }\r\n    updateStereoFlag(struct) {\r\n        this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\r\n        return this.#enhancedStereoFlag;\r\n    }\r\n    // TODO: split to 'add' and 'remove methods\r\n    updateStereoAtom(struct, aid, frId, isAdd) {\r\n        if (isAdd && !this.#stereoAtoms.includes(aid))\r\n            this.#stereoAtoms.push(aid);\r\n        if (!isAdd &&\r\n            (struct.atoms.get(aid)?.fragment !== frId ||\r\n                !Array.from(struct.bonds.values())\r\n                    .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\r\n                    .some((bond) => bond.begin === aid))) {\r\n            this.#stereoAtoms = this.stereoAtoms.filter((item) => item !== aid);\r\n        }\r\n        this.#enhancedStereoFlag = calcStereoFlag(struct, this.stereoAtoms);\r\n    }\r\n    addStereoAtom(atomId) {\r\n        if (!this.#stereoAtoms.includes(atomId)) {\r\n            this.stereoAtoms.push(atomId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    deleteStereoAtom(struct, fragmentId, atomId) {\r\n        if (struct.atoms.get(atomId)?.fragment !== fragmentId ||\r\n            !Array.from(struct.bonds.values())\r\n                .filter((bond) => bond.stereo && bond.type !== Bond.PATTERN.TYPE.DOUBLE)\r\n                .some((bond) => bond.begin === atomId)) {\r\n            this.#stereoAtoms = this.#stereoAtoms.filter((item) => item !== atomId);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=fragment.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/vec2.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/bond.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/atom.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/struct.ts"],"map":"{\"version\":3,\"file\":\"fragment.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/domain/entities/fragment.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/entities/fragment.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Point, Vec2 } from './vec2';\r\nimport { Struct } from './struct';\r\nexport declare enum StereoFlag {\r\n    Mixed = \"MIXED\",\r\n    Abs = \"ABS\",\r\n    And = \"AND\",\r\n    Or = \"OR\"\r\n}\r\nexport declare class Fragment {\r\n    #private;\r\n    stereoFlagPosition?: Vec2;\r\n    get stereoAtoms(): Array<number>;\r\n    get enhancedStereoFlag(): StereoFlag | undefined;\r\n    constructor(stereoAtoms?: Array<number>, stereoFlagPosition?: Point);\r\n    static getDefaultStereoFlagPosition(struct: Struct, fragmentId: number): Vec2 | undefined;\r\n    clone(aidMap: Map<number, number>): Fragment;\r\n    updateStereoFlag(struct: Struct): StereoFlag | undefined;\r\n    updateStereoAtom(struct: Struct, aid: number, frId: number, isAdd: boolean): void;\r\n    addStereoAtom(atomId: number): boolean;\r\n    deleteStereoAtom(struct: Struct, fragmentId: number, atomId: number): boolean;\r\n}\r\n"}}

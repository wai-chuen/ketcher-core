{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Elements } from \"../constants\";\r\nexport class AtomList {\r\n    notList;\r\n    ids;\r\n    constructor(params) {\r\n        this.notList = params.notList;\r\n        this.ids = params.ids;\r\n    }\r\n    labelList() {\r\n        const labels = [];\r\n        for (const id of this.ids) {\r\n            const currenElement = Elements.get(id);\r\n            currenElement && labels.push(currenElement.label);\r\n        }\r\n        return labels;\r\n    }\r\n    label() {\r\n        let label = '[' + this.labelList().join(',') + ']';\r\n        if (this.notList) {\r\n            label = '!' + label;\r\n        }\r\n        return label;\r\n    }\r\n    equals(atomList) {\r\n        return (this.notList === atomList.notList &&\r\n            (this.ids || []).sort().toString() ===\r\n                (atomList.ids || []).sort().toString());\r\n    }\r\n}\r\n//# sourceMappingURL=atomList.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/constants/index.ts"],"map":"{\"version\":3,\"file\":\"atomList.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/domain/entities/atomList.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAgB,QAAQ,EAAE,qBAAwB;AAOzD,MAAM,OAAO,QAAQ;IACnB,OAAO,CAAS;IAChB,GAAG,CAAe;IAElB,YAAY,MAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;QAC7B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA;IACvB,CAAC;IAED,SAAS;QACP,MAAM,MAAM,GAAwB,EAAE,CAAA;QACtC,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE;YACzB,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;YACtC,aAAa,IAAI,MAAM,CAAC,IAAI,CAAC,aAAc,CAAC,KAAK,CAAC,CAAA;SACnD;QAED,OAAO,MAAM,CAAA;IACf,CAAC;IAED,KAAK;QACH,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;QAClD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,KAAK,GAAG,GAAG,GAAG,KAAK,CAAA;SACpB;QACD,OAAO,KAAK,CAAA;IACd,CAAC;IAED,MAAM,CAAC,QAAkB;QACvB,OAAO,CACL,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO;YACjC,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;gBAChC,CAAC,QAAQ,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,CACzC,CAAA;IACH,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/entities/atomList.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ElementLabel } from \"../constants\";\r\nexport interface AtomListParams {\r\n    readonly notList: boolean;\r\n    readonly ids: Array<number>;\r\n}\r\nexport declare class AtomList {\r\n    notList: boolean;\r\n    ids: Array<number>;\r\n    constructor(params: AtomListParams);\r\n    labelList(): ElementLabel[];\r\n    label(): string;\r\n    equals(atomList: AtomList): boolean;\r\n}\r\n"}}

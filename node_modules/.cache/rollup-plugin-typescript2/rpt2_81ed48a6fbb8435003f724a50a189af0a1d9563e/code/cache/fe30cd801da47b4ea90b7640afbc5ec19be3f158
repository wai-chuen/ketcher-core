{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Pile } from './pile';\r\nimport { Vec2 } from './vec2';\r\nexport class Bond {\r\n    static PATTERN = {\r\n        TYPE: {\r\n            SINGLE: 1,\r\n            DOUBLE: 2,\r\n            TRIPLE: 3,\r\n            AROMATIC: 4,\r\n            SINGLE_OR_DOUBLE: 5,\r\n            SINGLE_OR_AROMATIC: 6,\r\n            DOUBLE_OR_AROMATIC: 7,\r\n            ANY: 8,\r\n            DATIVE: 9,\r\n            HYDROGEN: 10\r\n        },\r\n        STEREO: {\r\n            NONE: 0,\r\n            UP: 1,\r\n            EITHER: 4,\r\n            DOWN: 6,\r\n            CIS_TRANS: 3\r\n        },\r\n        TOPOLOGY: {\r\n            EITHER: 0,\r\n            RING: 1,\r\n            CHAIN: 2\r\n        },\r\n        REACTING_CENTER: {\r\n            NOT_CENTER: -1,\r\n            UNMARKED: 0,\r\n            CENTER: 1,\r\n            UNCHANGED: 2,\r\n            MADE_OR_BROKEN: 4,\r\n            ORDER_CHANGED: 8,\r\n            MADE_OR_BROKEN_AND_CHANGED: 12\r\n        }\r\n    };\r\n    static attrlist = {\r\n        type: Bond.PATTERN.TYPE.SINGLE,\r\n        stereo: Bond.PATTERN.STEREO.NONE,\r\n        topology: Bond.PATTERN.TOPOLOGY.EITHER,\r\n        reactingCenterStatus: Bond.PATTERN.REACTING_CENTER.UNMARKED\r\n    };\r\n    begin;\r\n    end;\r\n    type;\r\n    xxx;\r\n    stereo;\r\n    topology;\r\n    reactingCenterStatus;\r\n    len;\r\n    sb;\r\n    sa;\r\n    hb1;\r\n    hb2;\r\n    angle;\r\n    center;\r\n    constructor(attributes) {\r\n        this.begin = attributes.begin;\r\n        this.end = attributes.end;\r\n        this.type = attributes.type;\r\n        this.xxx = attributes.xxx || '';\r\n        this.stereo = Bond.PATTERN.STEREO.NONE;\r\n        this.topology = Bond.PATTERN.TOPOLOGY.EITHER;\r\n        this.reactingCenterStatus = 0;\r\n        this.len = 0;\r\n        this.sb = 0;\r\n        this.sa = 0;\r\n        this.angle = 0;\r\n        if (attributes.stereo)\r\n            this.stereo = attributes.stereo;\r\n        if (attributes.topology)\r\n            this.topology = attributes.topology;\r\n        if (attributes.reactingCenterStatus) {\r\n            this.reactingCenterStatus = attributes.reactingCenterStatus;\r\n        }\r\n        this.center = new Vec2();\r\n    }\r\n    static getAttrHash(bond) {\r\n        const attrs = {};\r\n        for (const attr in Bond.attrlist) {\r\n            if (bond[attr] || attr === 'stereo') {\r\n                attrs[attr] = bond[attr];\r\n            }\r\n        }\r\n        return attrs;\r\n    }\r\n    static attrGetDefault(attr) {\r\n        if (attr in Bond.attrlist) {\r\n            return Bond.attrlist[attr];\r\n        }\r\n    }\r\n    hasRxnProps() {\r\n        return !!this.reactingCenterStatus;\r\n    }\r\n    getCenter(struct) {\r\n        const p1 = struct.atoms.get(this.begin).pp;\r\n        const p2 = struct.atoms.get(this.end).pp;\r\n        return Vec2.lc2(p1, 0.5, p2, 0.5);\r\n    }\r\n    getDir(struct) {\r\n        const p1 = struct.atoms.get(this.begin).pp;\r\n        const p2 = struct.atoms.get(this.end).pp;\r\n        return p2.sub(p1).normalized();\r\n    }\r\n    clone(aidMap) {\r\n        const cp = new Bond(this);\r\n        if (aidMap) {\r\n            cp.begin = aidMap.get(cp.begin);\r\n            cp.end = aidMap.get(cp.end);\r\n        }\r\n        return cp;\r\n    }\r\n    getAttachedSGroups(struct) {\r\n        const sGroupsWithBeginAtom = struct.atoms.get(this.begin)?.sgs || new Pile();\r\n        const sGroupsWithEndAtom = struct.atoms.get(this.end)?.sgs || new Pile();\r\n        return sGroupsWithBeginAtom?.intersection(sGroupsWithEndAtom);\r\n    }\r\n}\r\n//# sourceMappingURL=bond.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/pile.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/struct.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/vec2.ts"],"map":"{\"version\":3,\"file\":\"bond.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/domain/entities/bond.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/entities/bond.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Pile } from './pile';\r\nimport { Struct } from './struct';\r\nimport { Vec2 } from './vec2';\r\nexport interface BondAttributes {\r\n    reactingCenterStatus?: number;\r\n    topology?: number;\r\n    stereo?: number;\r\n    xxx?: string;\r\n    type: number;\r\n    end: number;\r\n    begin: number;\r\n}\r\nexport declare class Bond {\r\n    static PATTERN: {\r\n        TYPE: {\r\n            SINGLE: number;\r\n            DOUBLE: number;\r\n            TRIPLE: number;\r\n            AROMATIC: number;\r\n            SINGLE_OR_DOUBLE: number;\r\n            SINGLE_OR_AROMATIC: number;\r\n            DOUBLE_OR_AROMATIC: number;\r\n            ANY: number;\r\n            DATIVE: number;\r\n            HYDROGEN: number;\r\n        };\r\n        STEREO: {\r\n            NONE: number;\r\n            UP: number;\r\n            EITHER: number;\r\n            DOWN: number;\r\n            CIS_TRANS: number;\r\n        };\r\n        TOPOLOGY: {\r\n            EITHER: number;\r\n            RING: number;\r\n            CHAIN: number;\r\n        };\r\n        REACTING_CENTER: {\r\n            NOT_CENTER: number;\r\n            UNMARKED: number;\r\n            CENTER: number;\r\n            UNCHANGED: number;\r\n            MADE_OR_BROKEN: number;\r\n            ORDER_CHANGED: number;\r\n            MADE_OR_BROKEN_AND_CHANGED: number;\r\n        };\r\n    };\r\n    static attrlist: {\r\n        type: number;\r\n        stereo: number;\r\n        topology: number;\r\n        reactingCenterStatus: number;\r\n    };\r\n    begin: number;\r\n    end: number;\r\n    readonly type: number;\r\n    readonly xxx: string;\r\n    readonly stereo: number;\r\n    readonly topology: number;\r\n    readonly reactingCenterStatus: number;\r\n    len: number;\r\n    sb: number;\r\n    sa: number;\r\n    hb1?: number;\r\n    hb2?: number;\r\n    angle: number;\r\n    center: Vec2;\r\n    constructor(attributes: BondAttributes);\r\n    static getAttrHash(bond: Bond): {};\r\n    static attrGetDefault(attr: string): any;\r\n    hasRxnProps(): boolean;\r\n    getCenter(struct: any): Vec2;\r\n    getDir(struct: any): Vec2;\r\n    clone(aidMap?: Map<number, number> | null): Bond;\r\n    getAttachedSGroups(struct: Struct): Pile<number>;\r\n}\r\n"}}

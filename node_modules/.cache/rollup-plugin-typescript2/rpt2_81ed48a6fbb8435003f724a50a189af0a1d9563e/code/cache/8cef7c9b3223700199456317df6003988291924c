{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AtomDelete, BondDelete, CalcImplicitH, RxnArrowDelete, RxnPlusDelete, SimpleObjectDelete, TextDelete } from '../operations';\r\nimport { RGroup } from \"../../../domain/entities\";\r\nimport { removeAtomFromSgroupIfNeeded, removeSgroupIfNeeded } from './sgroup';\r\nimport { Action } from './action';\r\nimport assert from 'assert';\r\nimport { atomGetDegree } from './utils';\r\nimport { fromBondStereoUpdate } from '../actions/bond';\r\nimport { fromFragmentSplit } from './fragment';\r\nexport function fromOneAtomDeletion(restruct, atomId) {\r\n    return fromFragmentDeletion(restruct, { atoms: [atomId] });\r\n}\r\nfunction fromBondDeletion(restruct, bid, skipAtoms = []) {\r\n    let action = new Action();\r\n    const bond = restruct.molecule.bonds.get(bid);\r\n    const atomsToRemove = [];\r\n    action.addOp(new BondDelete(bid));\r\n    if (!skipAtoms.includes(bond.begin) &&\r\n        atomGetDegree(restruct, bond.begin) === 0) {\r\n        if (removeAtomFromSgroupIfNeeded(action, restruct, bond.begin)) {\r\n            atomsToRemove.push(bond.begin);\r\n        }\r\n        action.addOp(new AtomDelete(bond.begin));\r\n    }\r\n    if (!skipAtoms.includes(bond.end) &&\r\n        atomGetDegree(restruct, bond.end) === 0) {\r\n        if (removeAtomFromSgroupIfNeeded(action, restruct, bond.end)) {\r\n            atomsToRemove.push(bond.end);\r\n        }\r\n        action.addOp(new AtomDelete(bond.end));\r\n    }\r\n    removeSgroupIfNeeded(action, restruct, atomsToRemove);\r\n    action = action.perform(restruct);\r\n    action.addOp(new CalcImplicitH([bond.begin, bond.end]).perform(restruct));\r\n    action.mergeWith(fromBondStereoUpdate(restruct, bond, false));\r\n    action.operations.reverse();\r\n    return action;\r\n}\r\nexport function fromOneBondDeletion(restruct, id) {\r\n    const frid = restruct.molecule.getBondFragment(id);\r\n    let action = fromBondDeletion(restruct, id);\r\n    action = fromFragmentSplit(restruct, frid).mergeWith(action);\r\n    return action;\r\n}\r\nexport function fromFragmentDeletion(restruct, selection) {\r\n    assert(!!selection != null);\r\n    let action = new Action();\r\n    const atomsToRemove = [];\r\n    const frids = [];\r\n    selection = {\r\n        // TODO: refactor me\r\n        atoms: selection.atoms || [],\r\n        bonds: selection.bonds || [],\r\n        rxnPluses: selection.rxnPluses || [],\r\n        rxnArrows: selection.rxnArrows || [],\r\n        sgroupData: selection.sgroupData || [],\r\n        simpleObjects: selection.simpleObjects || [],\r\n        texts: selection.texts || []\r\n    };\r\n    selection.atoms.forEach((aid) => {\r\n        restruct.molecule.atomGetNeighbors(aid).forEach((nei) => {\r\n            if (selection.bonds.indexOf(nei.bid) === -1) {\r\n                selection.bonds = selection.bonds.concat([nei.bid]);\r\n            }\r\n        });\r\n    });\r\n    const actionRemoveBonds = new Action();\r\n    selection.bonds.forEach((bid) => {\r\n        const frid = restruct.molecule.getBondFragment(bid);\r\n        if (frids.indexOf(frid) < 0)\r\n            frids.push(frid);\r\n        actionRemoveBonds.mergeWith(fromBondDeletion(restruct, bid, selection.atoms));\r\n    });\r\n    selection.atoms.forEach((aid) => {\r\n        const frid3 = restruct.molecule.atoms.get(aid).fragment;\r\n        if (frids.indexOf(frid3) < 0)\r\n            frids.push(frid3);\r\n        if (removeAtomFromSgroupIfNeeded(action, restruct, aid)) {\r\n            atomsToRemove.push(aid);\r\n        }\r\n        action.addOp(new AtomDelete(aid));\r\n    });\r\n    removeSgroupIfNeeded(action, restruct, atomsToRemove);\r\n    selection.rxnArrows.forEach((id) => {\r\n        action.addOp(new RxnArrowDelete(id));\r\n    });\r\n    selection.rxnPluses.forEach((id) => {\r\n        action.addOp(new RxnPlusDelete(id));\r\n    });\r\n    selection.simpleObjects.forEach((id) => {\r\n        action.addOp(new SimpleObjectDelete(id));\r\n    });\r\n    selection.texts.forEach((id) => {\r\n        action.addOp(new TextDelete(id));\r\n    });\r\n    action = action.perform(restruct);\r\n    action.mergeWith(actionRemoveBonds);\r\n    const rgForRemove = frids.map((frid) => RGroup.findRGroupByFragment(restruct.molecule.rgroups, frid));\r\n    while (frids.length > 0) {\r\n        action = fromFragmentSplit(restruct, frids.pop(), rgForRemove).mergeWith(action);\r\n    }\r\n    return action;\r\n}\r\n//# sourceMappingURL=erase.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/sgroup.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/action.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/assert/build/assert.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/utils.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/bond.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/actions/fragment.ts"],"map":"{\"version\":3,\"file\":\"erase.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/actions/erase.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/actions/erase.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Action } from './action';\r\nexport declare function fromOneAtomDeletion(restruct: any, atomId: number): Action;\r\nexport declare function fromOneBondDeletion(restruct: any, id: any): Action;\r\nexport declare function fromFragmentDeletion(restruct: any, selection: any): Action;\r\n"}}

{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nexport class SGroupDataMove extends BaseOperation {\r\n    data;\r\n    constructor(id, d) {\r\n        super(OperationType.S_GROUP_DATA_MOVE);\r\n        this.data = { id, d };\r\n    }\r\n    execute(restruct) {\r\n        const { d, id } = this.data;\r\n        const { sgroups } = restruct.molecule;\r\n        sgroups.get(id).pp?.add_(d); // eslint-disable-line no-underscore-dangle\r\n        this.data.d = d.negated();\r\n        // [MK] this currently does nothing since the DataSGroupData Visel only contains the highlighting/selection and SGroups are redrawn every time anyway\r\n        BaseOperation.invalidateItem(restruct, 'sgroupData', id, 1);\r\n    }\r\n    invert() {\r\n        const inverted = new SGroupDataMove();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\n//# sourceMappingURL=SGroupDataMove.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts"],"map":"{\"version\":3,\"file\":\"SGroupDataMove.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/sgroup/SGroupDataMove.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAGhD,MAAM,OAAO,cAAe,SAAQ,aAAa;IAC/C,IAAI,CAGH;IAED,YAAY,EAAQ,EAAE,CAAO;QAC3B,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QACtC,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAA;IACvB,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;QAC3B,MAAM,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAErC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA,CAAC,2CAA2C;QACxE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;QAEzB,qJAAqJ;QACrJ,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IAC7D,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,cAAc,EAAE,CAAA;QACrC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACzB,OAAO,QAAQ,CAAA;IACjB,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/sgroup/SGroupDataMove.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { ReStruct } from '../../../render';\r\nexport declare class SGroupDataMove extends BaseOperation {\r\n    data: {\r\n        id: any;\r\n        d: any;\r\n    };\r\n    constructor(id?: any, d?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): SGroupDataMove;\r\n}\r\n"}}

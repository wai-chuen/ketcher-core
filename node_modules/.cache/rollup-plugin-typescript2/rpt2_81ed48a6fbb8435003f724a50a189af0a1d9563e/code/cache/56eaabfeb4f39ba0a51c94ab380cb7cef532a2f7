{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nexport {};\r\n//# sourceMappingURL=editor.types.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/actions/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts"],"map":"{\"version\":3,\"file\":\"editor.types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/application/editor/editor.types.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/editor.types.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Action } from \"../actions\";\r\nimport { Struct } from \"../../domain/entities\";\r\nexport interface EditorHistory {\r\n    readonly current?: number;\r\n    readonly length: number;\r\n    push: (action: Action) => EditorHistory;\r\n    pop: () => Action;\r\n}\r\nexport interface LoadOptions {\r\n    rescale: boolean;\r\n    fragment: boolean;\r\n}\r\ninterface Selection {\r\n    atoms?: Array<number>;\r\n    bonds?: Array<number>;\r\n    enhancedFlags?: Array<number>;\r\n    rxnPluses?: Array<number>;\r\n    rxnArrows?: Array<number>;\r\n}\r\nexport interface Editor {\r\n    isDitrty: () => boolean;\r\n    setOrigin: () => void;\r\n    struct: (struct?: Struct) => Struct;\r\n    structToAddFragment: (struct: Struct) => Struct;\r\n    subscribe: (eventName: string, handler: (data?: any) => any) => any;\r\n    unsubscribe: (eventName: string, subscriber: any) => void;\r\n    selection: (arg?: Selection | 'all' | null) => Selection | null;\r\n    undo: () => void;\r\n    redo: () => void;\r\n    clear: () => void;\r\n    options: (value?: any) => any;\r\n    setOptions: (opts: string) => any;\r\n    zoom: (value?: any) => any;\r\n    structSelected: () => Struct;\r\n}\r\nexport {};\r\n"}}

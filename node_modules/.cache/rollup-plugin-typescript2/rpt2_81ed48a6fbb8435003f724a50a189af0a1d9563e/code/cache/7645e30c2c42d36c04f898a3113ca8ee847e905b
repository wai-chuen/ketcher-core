{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReBond } from '../../../render';\r\nimport { BaseOperation } from '../base';\r\nimport { Bond } from \"../../../../domain/entities\";\r\nimport { OperationType } from '../OperationType';\r\nclass BondAdd extends BaseOperation {\r\n    data;\r\n    constructor(begin, end, bond) {\r\n        super(OperationType.BOND_ADD, 1);\r\n        this.data = { bond, begin, end, bid: null };\r\n    }\r\n    execute(restruct) {\r\n        const { begin, bond, end } = this.data;\r\n        // eslint-disable-line max-statements\r\n        const struct = restruct.molecule;\r\n        if (begin === end) {\r\n            throw new Error('Distinct atoms expected');\r\n        }\r\n        BaseOperation.invalidateAtom(restruct, begin, 1);\r\n        BaseOperation.invalidateAtom(restruct, end, 1);\r\n        const pp = {\r\n            type: 0,\r\n            begin: 0,\r\n            end: 0\r\n        };\r\n        if (bond) {\r\n            Object.keys(bond).forEach((p) => {\r\n                pp[p] = bond[p];\r\n            });\r\n        }\r\n        pp.type = pp.type || Bond.PATTERN.TYPE.SINGLE;\r\n        pp.begin = begin;\r\n        pp.end = end;\r\n        const newBond = new Bond(pp);\r\n        if (typeof this.data.bid === 'number') {\r\n            struct.bonds.set(this.data.bid, newBond);\r\n        }\r\n        else {\r\n            this.data.bid = struct.bonds.add(newBond);\r\n        }\r\n        const { bid } = this.data;\r\n        const structBond = struct.bonds.get(bid);\r\n        struct.bondInitHalfBonds(bid);\r\n        struct.atomAddNeighbor(structBond.hb1);\r\n        struct.atomAddNeighbor(structBond.hb2);\r\n        // notifyBondAdded\r\n        restruct.bonds.set(bid, new ReBond(structBond));\r\n        restruct.markBond(bid, 1);\r\n    }\r\n    invert() {\r\n        const inverted = new BondDelete();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nclass BondDelete extends BaseOperation {\r\n    data;\r\n    constructor(bondId) {\r\n        super(OperationType.BOND_DELETE, 3);\r\n        this.data = { bid: bondId, bond: null, begin: null, end: null };\r\n    }\r\n    execute(restruct) {\r\n        const { bid } = this.data;\r\n        // eslint-disable-line max-statements\r\n        const struct = restruct.molecule;\r\n        if (!this.data.bond) {\r\n            this.data.bond = struct.bonds.get(bid);\r\n            this.data.begin = this.data.bond.begin;\r\n            this.data.end = this.data.bond.end;\r\n        }\r\n        BaseOperation.invalidateBond(restruct, bid);\r\n        // notifyBondRemoved\r\n        const rebond = restruct.bonds.get(bid);\r\n        if (!rebond)\r\n            return;\r\n        [rebond.b.hb1, rebond.b.hb2].forEach((hbid) => {\r\n            if (hbid === undefined)\r\n                return;\r\n            const halfBond = restruct.molecule.halfBonds.get(hbid);\r\n            if (halfBond && halfBond.loop >= 0) {\r\n                restruct.loopRemove(halfBond.loop);\r\n            }\r\n        }, restruct);\r\n        restruct.clearVisel(rebond.visel);\r\n        restruct.bonds.delete(bid);\r\n        restruct.markItemRemoved();\r\n        const structBond = struct.bonds.get(bid);\r\n        [structBond.hb1, structBond.hb2].forEach((hbid) => {\r\n            const halfBond = struct.halfBonds.get(hbid);\r\n            if (!halfBond) {\r\n                return;\r\n            }\r\n            const atom = struct.atoms.get(halfBond.begin);\r\n            const pos = atom.neighbors.indexOf(hbid);\r\n            const prev = (pos + atom.neighbors.length - 1) % atom.neighbors.length;\r\n            const next = (pos + 1) % atom.neighbors.length;\r\n            struct.setHbNext(atom.neighbors[prev], atom.neighbors[next]);\r\n            atom.neighbors.splice(pos, 1);\r\n        });\r\n        struct.halfBonds.delete(structBond.hb1);\r\n        struct.halfBonds.delete(structBond.hb2);\r\n        struct.bonds.delete(bid);\r\n    }\r\n    invert() {\r\n        const inverted = new BondAdd();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nexport { BondAdd, BondDelete };\r\nexport * from './BondAttr';\r\nexport * from './BondMove';\r\n//# sourceMappingURL=index.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/bond/BondAttr.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/bond/BondMove.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/bond/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/bond/index.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { ReStruct } from '../../../render';\r\nimport { BaseOperation } from '../base';\r\ndeclare type Data = {\r\n    bond: any;\r\n    begin: any;\r\n    end: any;\r\n    bid: any;\r\n};\r\ndeclare class BondAdd extends BaseOperation {\r\n    data: Data;\r\n    constructor(begin?: any, end?: any, bond?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): BondDelete;\r\n}\r\ndeclare class BondDelete extends BaseOperation {\r\n    data: Data;\r\n    constructor(bondId?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): BondAdd;\r\n}\r\nexport { BondAdd, BondDelete };\r\nexport * from './BondAttr';\r\nexport * from './BondMove';\r\n"}}

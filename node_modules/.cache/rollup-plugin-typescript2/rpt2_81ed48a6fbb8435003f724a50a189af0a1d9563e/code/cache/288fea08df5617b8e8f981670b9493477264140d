{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Box2Abs, RxnArrow, Vec2 } from \"../../../domain/entities\";\r\nimport { LayerMap } from './generalEnumTypes';\r\nimport Raphael from '../raphael-ext';\r\nimport ReObject from './reobject';\r\nimport { Scale } from \"../../../domain/helpers\";\r\nimport draw from '../draw';\r\nimport util from '../util';\r\nclass ReRxnArrow extends ReObject {\r\n    item;\r\n    constructor(/* chem.RxnArrow */ arrow) {\r\n        super('rxnArrow');\r\n        this.item = arrow;\r\n    }\r\n    static isSelectable() {\r\n        return true;\r\n    }\r\n    calcDistance(p, s) {\r\n        const point = new Vec2(p.x, p.y);\r\n        const distRef = this.getReferencePointDistance(p);\r\n        const item = this.item;\r\n        const pos = item.pos;\r\n        let dist = calculateDistanceToLine(pos, point);\r\n        if (RxnArrow.isElliptical(item)) {\r\n            // currently an elliptical arrow is highlighted if a pointer is close to one of the 3 virtual lines\r\n            // that form a triangle from the arrow's 3 reference points\r\n            // TODO: make a better detection (maybe rectangular, so it's similar to visual highlight/selection)\r\n            const [startPoint, endPoint, middlePoint] = this.getReferencePoints();\r\n            dist = Math.min(dist, calculateDistanceToLine([startPoint, middlePoint], point), calculateDistanceToLine([middlePoint, endPoint], point));\r\n        }\r\n        const refPoint = distRef.minDist <= 8 / s ? distRef.refPoint : null;\r\n        // distance is a smallest between dist to figure and it's reference points\r\n        dist = Math.min(distRef.minDist, dist);\r\n        return { minDist: dist, refPoint };\r\n    }\r\n    getReferencePointDistance(p) {\r\n        const dist = [];\r\n        const refPoints = this.getReferencePoints();\r\n        refPoints.forEach((rp) => {\r\n            dist.push({ minDist: Math.abs(Vec2.dist(p, rp)), refPoint: rp });\r\n        });\r\n        const minDist = dist.reduce((acc, current) => !acc ? current : acc.minDist < current.minDist ? acc : current, null);\r\n        return minDist;\r\n    }\r\n    hoverPath(render) {\r\n        const path = this.generatePath(render, render.options, 'selection');\r\n        return render.paper.path(path);\r\n    }\r\n    drawHover(render) {\r\n        const ret = this.hoverPath(render).attr(render.options.hoverStyle);\r\n        render.ctab.addReObjectPath(LayerMap.hovering, this.visel, ret);\r\n        return ret;\r\n    }\r\n    getReferencePoints() {\r\n        const refPoints = [];\r\n        const item = this.item;\r\n        const [a, b] = item.pos;\r\n        const height = item.height;\r\n        refPoints.push(new Vec2(a.x, a.y));\r\n        refPoints.push(new Vec2(b.x, b.y));\r\n        if (RxnArrow.isElliptical(item)) {\r\n            const middlePoint = findMiddlePoint(height, a, b);\r\n            refPoints.push(middlePoint);\r\n        }\r\n        return refPoints;\r\n    }\r\n    makeSelectionPlate(restruct, _paper, styles) {\r\n        const render = restruct.render;\r\n        const options = restruct.render.options;\r\n        const refPoints = this.getReferencePoints();\r\n        const scaleFactor = options.scale;\r\n        const selectionSet = restruct.render.paper.set();\r\n        selectionSet.push(render.paper\r\n            .path(this.generatePath(render, options, 'selection'))\r\n            .attr(styles.selectionStyle));\r\n        refPoints.forEach((rp) => {\r\n            const scaledRP = Scale.obj2scaled(rp, restruct.render.options);\r\n            selectionSet.push(restruct.render.paper\r\n                .circle(scaledRP.x, scaledRP.y, scaleFactor / 8)\r\n                .attr({ fill: 'black' }));\r\n        });\r\n        return selectionSet;\r\n    }\r\n    generatePath(render, options, type) {\r\n        let path;\r\n        const item = this.item;\r\n        const height = RxnArrow.isElliptical(item) && item.height * options.scale;\r\n        const pos = item.pos.map((p) => {\r\n            return Scale.obj2scaled(p, options) || new Vec2();\r\n        });\r\n        const { length, angle } = this.getArrowParams(pos[0].x, pos[0].y, pos[1].x, pos[1].y);\r\n        switch (type) {\r\n            case 'selection':\r\n                path = draw.rectangleArrowHighlightAndSelection(render.paper, { pos, height }, length, angle, options);\r\n                break;\r\n            case 'arrow':\r\n                path = draw.arrow(render.paper, { ...item, pos, height }, length, angle, options);\r\n                break;\r\n        }\r\n        return path;\r\n    }\r\n    getArrowParams(x1, y1, x2, y2) {\r\n        const length = Math.hypot(x2 - x1, y2 - y1);\r\n        const angle = Raphael.angle(x1, y1, x2, y2) - 180;\r\n        return { length, angle };\r\n    }\r\n    show(restruct, _id, options) {\r\n        const path = this.generatePath(restruct.render, options, 'arrow');\r\n        const offset = options.offset;\r\n        if (offset != null)\r\n            path.translateAbs(offset.x, offset.y);\r\n        this.visel.add(path, Box2Abs.fromRelBox(util.relBox(path.getBBox())));\r\n    }\r\n}\r\nfunction calculateDistanceToLine(pos, point) {\r\n    let dist;\r\n    if ((point.x < Math.min(pos[0].x, pos[1].x) ||\r\n        point.x > Math.max(pos[0].x, pos[1].x)) &&\r\n        (point.y < Math.min(pos[0].y, pos[1].y) ||\r\n            point.y > Math.max(pos[0].y, pos[1].y))) {\r\n        dist = Math.min(Vec2.dist(pos[0], point), Vec2.dist(pos[1], point));\r\n    }\r\n    else {\r\n        const a = Vec2.dist(pos[0], pos[1]);\r\n        const b = Vec2.dist(pos[0], point);\r\n        const c = Vec2.dist(pos[1], point);\r\n        const per = (a + b + c) / 2;\r\n        dist = (2 / a) * Math.sqrt(per * (per - a) * (per - b) * (per - c));\r\n    }\r\n    return dist;\r\n}\r\nfunction findMiddlePoint(height, a, b) {\r\n    if (+util.tfx(height) === 0) {\r\n        const minX = Math.min(a.x, b.x);\r\n        const minY = Math.min(a.y, b.y);\r\n        const x = minX + Math.abs(a.x - b.x) / 2;\r\n        const y = minY + Math.abs(a.y - b.y) / 2;\r\n        return new Vec2(x, y);\r\n    }\r\n    const length = Math.hypot(b.x - a.x, b.y - a.y);\r\n    const lengthHyp = Math.hypot(length / 2, height);\r\n    const coordinates1 = util.calcCoordinates(a, b, lengthHyp).pos1;\r\n    const coordinates2 = util.calcCoordinates(a, b, lengthHyp).pos2;\r\n    if (height > 0) {\r\n        if (b.x < a.x) {\r\n            return new Vec2(coordinates1?.x, coordinates1?.y);\r\n        }\r\n        if (b.x > a.x) {\r\n            return new Vec2(coordinates2?.x, coordinates2?.y);\r\n        }\r\n        if (b.x === a.x) {\r\n            if (b.y > a.y) {\r\n                return new Vec2(coordinates2?.x, coordinates2?.y);\r\n            }\r\n            if (b.y < a.y) {\r\n                return new Vec2(coordinates1?.x, coordinates1?.y);\r\n            }\r\n            if (b.y === a.y) {\r\n                return new Vec2(a.x, a.y);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (b.x > a.x) {\r\n            return new Vec2(coordinates1?.x, coordinates1?.y);\r\n        }\r\n        if (b.x < a.x) {\r\n            return new Vec2(coordinates2?.x, coordinates2?.y);\r\n        }\r\n        if (b.x === a.x) {\r\n            if (b.y > a.y) {\r\n                return new Vec2(coordinates1?.x, coordinates1?.y);\r\n            }\r\n            if (b.y < a.y) {\r\n                return new Vec2(coordinates2?.x, coordinates2?.y);\r\n            }\r\n            if (b.y === a.y) {\r\n                return new Vec2(a.x, a.y);\r\n            }\r\n        }\r\n    }\r\n    return new Vec2(a.x, a.y);\r\n}\r\nexport default ReRxnArrow;\r\n//# sourceMappingURL=rerxnarrow.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/generalEnumTypes.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/raphael-ext.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/reobject.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/restruct/restruct.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/raphaelRender.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/helpers/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/draw.js","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/util.ts"],"map":"{\"version\":3,\"file\":\"rerxnarrow.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/render/restruct/rerxnarrow.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/render/restruct/rerxnarrow.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { RxnArrowMode, Vec2 } from \"../../../domain/entities\";\r\nimport ReObject from './reobject';\r\nimport ReStruct from './restruct';\r\nimport { Render } from '../raphaelRender';\r\ndeclare type Arrow = {\r\n    pos: Array<Vec2>;\r\n    mode: RxnArrowMode;\r\n    height?: number;\r\n};\r\ndeclare type ArrowParams = {\r\n    length: number;\r\n    angle: number;\r\n};\r\ninterface MinDistanceWithReferencePoint {\r\n    minDist: number;\r\n    refPoint: Vec2 | null;\r\n}\r\ndeclare class ReRxnArrow extends ReObject {\r\n    item: Arrow;\r\n    constructor(/* chem.RxnArrow */ arrow: Arrow);\r\n    static isSelectable(): boolean;\r\n    calcDistance(p: Vec2, s: any): MinDistanceWithReferencePoint;\r\n    getReferencePointDistance(p: Vec2): MinDistanceWithReferencePoint;\r\n    hoverPath(render: Render): any;\r\n    drawHover(render: Render): any;\r\n    getReferencePoints(): Array<Vec2>;\r\n    makeSelectionPlate(restruct: ReStruct, _paper: any, styles: any): any;\r\n    generatePath(render: Render, options: any, type: any): any;\r\n    getArrowParams(x1: any, y1: any, x2: any, y2: any): ArrowParams;\r\n    show(restruct: ReStruct, _id: any, options: any): void;\r\n}\r\nexport default ReRxnArrow;\r\n"}}

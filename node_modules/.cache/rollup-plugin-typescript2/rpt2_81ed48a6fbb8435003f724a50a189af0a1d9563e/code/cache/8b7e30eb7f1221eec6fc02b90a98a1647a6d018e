{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nexport class TextUpdate extends BaseOperation {\r\n    data;\r\n    constructor(id, content) {\r\n        super(OperationType.TEXT_UPDATE);\r\n        this.data = { id, content: content };\r\n    }\r\n    execute(restruct) {\r\n        const { id, content } = this.data;\r\n        const text = restruct.molecule.texts.get(id);\r\n        if (text) {\r\n            this.data.previousContent = text.content;\r\n            text.content = content;\r\n        }\r\n        BaseOperation.invalidateItem(restruct, 'texts', id, 1);\r\n    }\r\n    invert() {\r\n        const inverted = new TextUpdate(this.data.id, this.data.previousContent);\r\n        inverted.data.previousContent = this.data.content;\r\n        return inverted;\r\n    }\r\n}\r\n//# sourceMappingURL=TextUpdate.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts"],"map":"{\"version\":3,\"file\":\"TextUpdate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/Text/TextUpdate.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAShD,MAAM,OAAO,UAAW,SAAQ,aAAa;IAC3C,IAAI,CAAgB;IAEpB,YAAY,EAAU,EAAE,OAAe;QACrC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;QAChC,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAA;IACtC,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;QAE5C,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAQ,CAAA;YACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;SACvB;QAED,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IACxD,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,eAAgB,CAAC,CAAA;QAEzE,QAAQ,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAA;QACjD,OAAO,QAAQ,CAAA;IACjB,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/Text/TextUpdate.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { ReStruct } from '../../../render';\r\ninterface TextUpdateData {\r\n    id: number;\r\n    content: string;\r\n    previousContent?: string;\r\n}\r\nexport declare class TextUpdate extends BaseOperation {\r\n    data: TextUpdateData;\r\n    constructor(id: number, content: string);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): TextUpdate;\r\n}\r\nexport {};\r\n"}}

{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { OperationType } from '../OperationType';\r\nimport { SGroup } from \"../../../../domain/entities\";\r\nclass SGroupAtomAdd extends BaseOperation {\r\n    data;\r\n    constructor(sgroupId, aid) {\r\n        super(OperationType.S_GROUP_ATOM_ADD, 3);\r\n        this.data = { sgid: sgroupId, aid };\r\n    }\r\n    execute(restruct) {\r\n        const { aid, sgid } = this.data;\r\n        const struct = restruct.molecule;\r\n        const atom = struct.atoms.get(aid);\r\n        const sgroup = struct.sgroups.get(sgid);\r\n        if (sgroup.atoms.indexOf(aid) >= 0) {\r\n            throw new Error('The same atom cannot be added to an S-group more than once');\r\n        }\r\n        if (!atom) {\r\n            throw new Error('OpSGroupAtomAdd: Atom ' + aid + ' not found');\r\n        }\r\n        struct.atomAddToSGroup(sgid, aid);\r\n        BaseOperation.invalidateAtom(restruct, aid);\r\n    }\r\n    invert() {\r\n        const inverted = new SGroupAtomRemove();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nclass SGroupAtomRemove extends BaseOperation {\r\n    data;\r\n    constructor(sgroupId, aid) {\r\n        super(OperationType.S_GROUP_ATOM_REMOVE, 4);\r\n        this.data = { sgid: sgroupId, aid };\r\n    }\r\n    execute(restruct) {\r\n        const { aid, sgid } = this.data;\r\n        const struct = restruct.molecule;\r\n        const atom = struct.atoms.get(aid);\r\n        const sgroup = struct.sgroups.get(sgid);\r\n        if (!atom || !sgroup) {\r\n            return;\r\n        }\r\n        SGroup.removeAtom(sgroup, aid);\r\n        atom.sgs.delete(sgid);\r\n        BaseOperation.invalidateAtom(restruct, aid);\r\n    }\r\n    invert() {\r\n        const inverted = new SGroupAtomAdd();\r\n        inverted.data = this.data;\r\n        return inverted;\r\n    }\r\n}\r\nexport { SGroupAtomAdd, SGroupAtomRemove };\r\n//# sourceMappingURL=sgroupAtom.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/base.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/operations/OperationType.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/render/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts"],"map":"{\"version\":3,\"file\":\"sgroupAtom.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/application/editor/operations/sgroup/sgroupAtom.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAE7E,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAA;AAEhD,OAAO,EAAE,MAAM,EAAE,oCAAuB;AASxC,MAAM,aAAc,SAAQ,aAAa;IACvC,IAAI,CAAM;IAEV,YAAY,QAAc,EAAE,GAAS;QACnC,KAAK,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAA;QACxC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAA;IACrC,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;QAE/B,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAChC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA;QACnC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,CAAA;QAExC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,IAAI,KAAK,CACb,4DAA4D,CAC7D,CAAA;SACF;QAED,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,GAAG,GAAG,YAAY,CAAC,CAAA;SAC/D;QAED,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QACjC,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IAC7C,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAA;QACvC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACzB,OAAO,QAAQ,CAAA;IACjB,CAAC;CACF;AAED,MAAM,gBAAiB,SAAQ,aAAa;IAC1C,IAAI,CAAM;IAEV,YAAY,QAAc,EAAE,GAAS;QACnC,KAAK,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAA;QAC3C,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAA;IACrC,CAAC;IAED,OAAO,CAAC,QAAkB;QACxB,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;QAE/B,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAA;QAChC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAE,CAAA;QACnC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,CAAA;QAExC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAM;SACP;QAED,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAC9B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QACrB,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IAC7C,CAAC;IAED,MAAM;QACJ,MAAM,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAA;QACpC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACzB,OAAO,QAAQ,CAAA;IACjB,CAAC;CACF;AAED,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,CAAA\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/operations/sgroup/sgroupAtom.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { BaseOperation } from '../base';\r\nimport { ReStruct } from '../../../render';\r\ndeclare type Data = {\r\n    sgid: any;\r\n    aid: any;\r\n};\r\ndeclare class SGroupAtomAdd extends BaseOperation {\r\n    data: Data;\r\n    constructor(sgroupId?: any, aid?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): SGroupAtomRemove;\r\n}\r\ndeclare class SGroupAtomRemove extends BaseOperation {\r\n    data: Data;\r\n    constructor(sgroupId?: any, aid?: any);\r\n    execute(restruct: ReStruct): void;\r\n    invert(): SGroupAtomAdd;\r\n}\r\nexport { SGroupAtomAdd, SGroupAtomRemove };\r\n"}}

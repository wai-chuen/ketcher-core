{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AtomList } from './atomList';\r\nimport { Vec2 } from './vec2';\r\nimport { Elements } from \"../constants\";\r\nimport { Pile } from './pile';\r\nfunction getValueOrDefault(value, defaultValue) {\r\n    return typeof value !== 'undefined' ? value : defaultValue;\r\n}\r\nfunction isCorrectPseudo(label) {\r\n    return (!Elements.get(label) && label !== 'L' && label !== 'L#' && label !== 'R#');\r\n}\r\nfunction getPseudo(label) {\r\n    return isCorrectPseudo(label) ? label : '';\r\n}\r\nexport function radicalElectrons(radical) {\r\n    radical -= 0;\r\n    if (radical === Atom.PATTERN.RADICAL.DOUPLET)\r\n        return 1;\r\n    else if (radical === Atom.PATTERN.RADICAL.SINGLET ||\r\n        radical === Atom.PATTERN.RADICAL.TRIPLET) {\r\n        return 2;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport var StereoLabel;\r\n(function (StereoLabel) {\r\n    StereoLabel[\"Abs\"] = \"abs\";\r\n    StereoLabel[\"And\"] = \"&\";\r\n    StereoLabel[\"Or\"] = \"or\";\r\n})(StereoLabel || (StereoLabel = {}));\r\nexport class Atom {\r\n    static PATTERN = {\r\n        RADICAL: {\r\n            NONE: 0,\r\n            SINGLET: 1,\r\n            DOUPLET: 2,\r\n            TRIPLET: 3\r\n        },\r\n        STEREO_PARITY: {\r\n            NONE: 0,\r\n            ODD: 1,\r\n            EVEN: 2,\r\n            EITHER: 3\r\n        }\r\n    };\r\n    // TODO: rename\r\n    static attrlist = {\r\n        alias: null,\r\n        label: 'C',\r\n        isotope: 0,\r\n        radical: 0,\r\n        charge: 0,\r\n        explicitValence: -1,\r\n        ringBondCount: 0,\r\n        substitutionCount: 0,\r\n        unsaturatedAtom: 0,\r\n        hCount: 0,\r\n        atomList: null,\r\n        invRet: 0,\r\n        exactChangeFlag: 0,\r\n        rglabel: null,\r\n        attpnt: null,\r\n        aam: 0,\r\n        // enhanced stereo\r\n        stereoLabel: null,\r\n        stereoParity: 0\r\n    };\r\n    label;\r\n    fragment;\r\n    atomList;\r\n    attpnt;\r\n    isotope;\r\n    hCount;\r\n    radical;\r\n    charge;\r\n    explicitValence;\r\n    ringBondCount;\r\n    unsaturatedAtom;\r\n    substitutionCount;\r\n    valence;\r\n    implicitH;\r\n    pp;\r\n    neighbors;\r\n    sgs;\r\n    badConn;\r\n    alias;\r\n    rglabel;\r\n    aam;\r\n    invRet;\r\n    exactChangeFlag;\r\n    rxnFragmentType;\r\n    stereoLabel;\r\n    stereoParity;\r\n    hasImplicitH;\r\n    pseudo;\r\n    constructor(attributes) {\r\n        this.label = attributes.label;\r\n        this.fragment = getValueOrDefault(attributes.fragment, -1);\r\n        this.alias = getValueOrDefault(attributes.alias, Atom.attrlist.alias);\r\n        this.isotope = getValueOrDefault(attributes.isotope, Atom.attrlist.isotope);\r\n        this.radical = getValueOrDefault(attributes.radical, Atom.attrlist.radical);\r\n        this.charge = getValueOrDefault(attributes.charge, Atom.attrlist.charge);\r\n        this.rglabel = getValueOrDefault(attributes.rglabel, Atom.attrlist.rglabel);\r\n        this.attpnt = getValueOrDefault(attributes.attpnt, Atom.attrlist.attpnt);\r\n        this.explicitValence = getValueOrDefault(attributes.explicitValence, Atom.attrlist.explicitValence);\r\n        this.valence = 0;\r\n        this.implicitH = attributes.implicitH || 0; // implicitH is not an attribute\r\n        this.pp = attributes.pp ? new Vec2(attributes.pp) : new Vec2();\r\n        // sgs should only be set when an atom is added to an s-group by an appropriate method,\r\n        //   or else a copied atom might think it belongs to a group, but the group be unaware of the atom\r\n        // TODO: make a consistency check on atom/s-group assignments\r\n        this.sgs = new Pile();\r\n        // query\r\n        this.ringBondCount = getValueOrDefault(attributes.ringBondCount, Atom.attrlist.ringBondCount);\r\n        this.substitutionCount = getValueOrDefault(attributes.substitutionCount, Atom.attrlist.substitutionCount);\r\n        this.unsaturatedAtom = getValueOrDefault(attributes.unsaturatedAtom, Atom.attrlist.unsaturatedAtom);\r\n        this.hCount = getValueOrDefault(attributes.hCount, Atom.attrlist.hCount);\r\n        // reaction\r\n        this.aam = getValueOrDefault(attributes.aam, Atom.attrlist.aam);\r\n        this.invRet = getValueOrDefault(attributes.invRet, Atom.attrlist.invRet);\r\n        this.exactChangeFlag = getValueOrDefault(attributes.exactChangeFlag, Atom.attrlist.exactChangeFlag);\r\n        this.rxnFragmentType = getValueOrDefault(attributes.rxnFragmentType, -1);\r\n        // stereo\r\n        this.stereoLabel = getValueOrDefault(attributes.stereoLabel, Atom.attrlist.stereoLabel);\r\n        this.stereoParity = getValueOrDefault(attributes.stereoParity, Atom.attrlist.stereoParity);\r\n        this.atomList = attributes.atomList\r\n            ? new AtomList(attributes.atomList)\r\n            : null;\r\n        this.neighbors = []; // set of half-bonds having this atom as their origin\r\n        this.badConn = false;\r\n        Object.defineProperty(this, 'pseudo', {\r\n            enumerable: true,\r\n            get: function () {\r\n                return getPseudo(this.label);\r\n            },\r\n            set: function (value) {\r\n                if (isCorrectPseudo(value)) {\r\n                    this.label = value;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static getAttrHash(atom) {\r\n        const attrs = {};\r\n        for (const attr in Atom.attrlist) {\r\n            if (typeof atom[attr] !== 'undefined')\r\n                attrs[attr] = atom[attr];\r\n        }\r\n        return attrs;\r\n    }\r\n    static attrGetDefault(attr) {\r\n        if (attr in Atom.attrlist) {\r\n            return Atom.attrlist[attr];\r\n        }\r\n    }\r\n    clone(fidMap) {\r\n        const ret = new Atom(this);\r\n        if (fidMap && fidMap.has(this.fragment)) {\r\n            ret.fragment = fidMap.get(this.fragment);\r\n        }\r\n        return ret;\r\n    }\r\n    isQuery() {\r\n        return (this.atomList !== null || this.label === 'A' || this.attpnt || this.hCount);\r\n    }\r\n    pureHydrogen() {\r\n        return this.label === 'H' && this.isotope === 0;\r\n    }\r\n    isPlainCarbon() {\r\n        return (this.label === 'C' &&\r\n            this.isotope === 0 &&\r\n            this.radical === 0 &&\r\n            this.charge === 0 &&\r\n            this.explicitValence < 0 &&\r\n            this.ringBondCount === 0 &&\r\n            this.substitutionCount === 0 &&\r\n            this.unsaturatedAtom === 0 &&\r\n            this.hCount === 0 &&\r\n            !this.atomList);\r\n    }\r\n    isPseudo() {\r\n        // TODO: handle reaxys generics separately\r\n        return !this.atomList && !this.rglabel && !Elements.get(this.label);\r\n    }\r\n    hasRxnProps() {\r\n        return !!(this.invRet ||\r\n            this.exactChangeFlag ||\r\n            this.attpnt !== null ||\r\n            this.aam);\r\n    }\r\n    calcValence(conn) {\r\n        const label = this.label;\r\n        const charge = this.charge;\r\n        if (this.isQuery()) {\r\n            this.implicitH = 0;\r\n            return true;\r\n        }\r\n        const element = Elements.get(label);\r\n        if (!element) {\r\n            this.implicitH = 0;\r\n            return true;\r\n        }\r\n        const groupno = element.group;\r\n        const rad = radicalElectrons(this.radical);\r\n        let valence = conn;\r\n        let hyd = 0;\r\n        const absCharge = Math.abs(charge);\r\n        if (groupno === 1) {\r\n            if (label === 'H' ||\r\n                label === 'Li' ||\r\n                label === 'Na' ||\r\n                label === 'K' ||\r\n                label === 'Rb' ||\r\n                label === 'Cs' ||\r\n                label === 'Fr') {\r\n                valence = 1;\r\n                hyd = 1 - rad - conn - absCharge;\r\n            }\r\n        }\r\n        else if (groupno === 2) {\r\n            if (conn + rad + absCharge === 2 || conn + rad + absCharge === 0) {\r\n                valence = 2;\r\n            }\r\n            else\r\n                hyd = -1;\r\n        }\r\n        else if (groupno === 3) {\r\n            if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\r\n                if (charge === -1) {\r\n                    valence = 4;\r\n                    hyd = 4 - rad - conn;\r\n                }\r\n                else {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn - absCharge;\r\n                }\r\n            }\r\n            else if (label === 'Tl') {\r\n                if (charge === -1) {\r\n                    if (rad + conn <= 2) {\r\n                        valence = 2;\r\n                        hyd = 2 - rad - conn;\r\n                    }\r\n                    else {\r\n                        valence = 4;\r\n                        hyd = 4 - rad - conn;\r\n                    }\r\n                }\r\n                else if (charge === -2) {\r\n                    if (rad + conn <= 3) {\r\n                        valence = 3;\r\n                        hyd = 3 - rad - conn;\r\n                    }\r\n                    else {\r\n                        valence = 5;\r\n                        hyd = 5 - rad - conn;\r\n                    }\r\n                }\r\n                else if (rad + conn + absCharge <= 1) {\r\n                    valence = 1;\r\n                    hyd = 1 - rad - conn - absCharge;\r\n                }\r\n                else {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn - absCharge;\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 4) {\r\n            if (label === 'C' || label === 'Si' || label === 'Ge') {\r\n                valence = 4;\r\n                hyd = 4 - rad - conn - absCharge;\r\n            }\r\n            else if (label === 'Sn' || label === 'Pb') {\r\n                if (conn + rad + absCharge <= 2) {\r\n                    valence = 2;\r\n                    hyd = 2 - rad - conn - absCharge;\r\n                }\r\n                else {\r\n                    valence = 4;\r\n                    hyd = 4 - rad - conn - absCharge;\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 5) {\r\n            if (label === 'N' || label === 'P') {\r\n                if (charge === 1) {\r\n                    valence = 4;\r\n                    hyd = 4 - rad - conn;\r\n                }\r\n                else if (charge === 2) {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn;\r\n                }\r\n                else if (label === 'N' || rad + conn + absCharge <= 3) {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn - absCharge;\r\n                }\r\n                else {\r\n                    // ELEM_P && rad + conn + absCharge > 3\r\n                    valence = 5;\r\n                    hyd = 5 - rad - conn - absCharge;\r\n                }\r\n            }\r\n            else if (label === 'Bi' || label === 'Sb' || label === 'As') {\r\n                if (charge === 1) {\r\n                    if (rad + conn <= 2 && label !== 'As') {\r\n                        valence = 2;\r\n                        hyd = 2 - rad - conn;\r\n                    }\r\n                    else {\r\n                        valence = 4;\r\n                        hyd = 4 - rad - conn;\r\n                    }\r\n                }\r\n                else if (charge === 2) {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn;\r\n                }\r\n                else if (rad + conn <= 3) {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn - absCharge;\r\n                }\r\n                else {\r\n                    valence = 5;\r\n                    hyd = 5 - rad - conn - absCharge;\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 6) {\r\n            if (label === 'O') {\r\n                if (charge >= 1) {\r\n                    valence = 3;\r\n                    hyd = 3 - rad - conn;\r\n                }\r\n                else {\r\n                    valence = 2;\r\n                    hyd = 2 - rad - conn - absCharge;\r\n                }\r\n            }\r\n            else if (label === 'S' || label === 'Se' || label === 'Po') {\r\n                if (charge === 1) {\r\n                    if (conn <= 3) {\r\n                        valence = 3;\r\n                        hyd = 3 - rad - conn;\r\n                    }\r\n                    else {\r\n                        valence = 5;\r\n                        hyd = 5 - rad - conn;\r\n                    }\r\n                }\r\n                else if (conn + rad + absCharge <= 2) {\r\n                    valence = 2;\r\n                    hyd = 2 - rad - conn - absCharge;\r\n                }\r\n                else if (conn + rad + absCharge <= 4) {\r\n                    // See examples in PubChem\r\n                    // [S] : CID 16684216\r\n                    // [Se]: CID 5242252\r\n                    // [Po]: no example, just following ISIS/Draw logic here\r\n                    valence = 4;\r\n                    hyd = 4 - rad - conn - absCharge;\r\n                }\r\n                else {\r\n                    // See examples in PubChem\r\n                    // [S] : CID 46937044\r\n                    // [Se]: CID 59786\r\n                    // [Po]: no example, just following ISIS/Draw logic here\r\n                    valence = 6;\r\n                    hyd = 6 - rad - conn - absCharge;\r\n                }\r\n            }\r\n            else if (label === 'Te') {\r\n                if (charge === -1) {\r\n                    if (conn <= 2) {\r\n                        valence = 2;\r\n                        hyd = 2 - rad - conn - absCharge;\r\n                    }\r\n                }\r\n                else if (charge === 0 || charge === 2) {\r\n                    if (conn <= 2) {\r\n                        valence = 2;\r\n                        hyd = 2 - rad - conn - absCharge;\r\n                    }\r\n                    else if (conn <= 4) {\r\n                        valence = 4;\r\n                        hyd = 4 - rad - conn - absCharge;\r\n                    }\r\n                    else if (charge === 0 && conn <= 6) {\r\n                        valence = 6;\r\n                        hyd = 6 - rad - conn - absCharge;\r\n                    }\r\n                    else {\r\n                        hyd = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 7) {\r\n            if (label === 'F') {\r\n                valence = 1;\r\n                hyd = 1 - rad - conn - absCharge;\r\n            }\r\n            else if (label === 'Cl' ||\r\n                label === 'Br' ||\r\n                label === 'I' ||\r\n                label === 'At') {\r\n                if (charge === 1) {\r\n                    if (conn <= 2) {\r\n                        valence = 2;\r\n                        hyd = 2 - rad - conn;\r\n                    }\r\n                    else if (conn === 3 || conn === 5 || conn >= 7) {\r\n                        hyd = -1;\r\n                    }\r\n                }\r\n                else if (charge === 0) {\r\n                    if (conn <= 1) {\r\n                        valence = 1;\r\n                        hyd = 1 - rad - conn;\r\n                        // While the halogens can have valence 3, they can not have\r\n                        // hydrogens in that case.\r\n                    }\r\n                    else if (conn === 2 || conn === 4 || conn === 6) {\r\n                        if (rad === 1) {\r\n                            valence = conn;\r\n                            hyd = 0;\r\n                        }\r\n                        else {\r\n                            hyd = -1; // will throw an error in the end\r\n                        }\r\n                    }\r\n                    else if (conn > 7) {\r\n                        hyd = -1; // will throw an error in the end\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 8) {\r\n            if (conn + rad + absCharge === 0)\r\n                valence = 1;\r\n            else\r\n                hyd = -1;\r\n        }\r\n        this.valence = valence;\r\n        this.implicitH = hyd;\r\n        if (this.implicitH < 0) {\r\n            this.valence = conn;\r\n            this.implicitH = 0;\r\n            this.badConn = true;\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    calcValenceMinusHyd(conn) {\r\n        const charge = this.charge;\r\n        const label = this.label;\r\n        const element = Elements.get(this.label);\r\n        if (!element) {\r\n            // query atom, skip\r\n            this.implicitH = 0;\r\n            return 0;\r\n        }\r\n        const groupno = element.group;\r\n        const rad = radicalElectrons(this.radical);\r\n        if (groupno === 3) {\r\n            if (label === 'B' || label === 'Al' || label === 'Ga' || label === 'In') {\r\n                if (charge === -1) {\r\n                    if (rad + conn <= 4)\r\n                        return rad + conn;\r\n                }\r\n            }\r\n        }\r\n        else if (groupno === 5) {\r\n            if (label === 'N' || label === 'P') {\r\n                if (charge === 1)\r\n                    return rad + conn;\r\n                if (charge === 2)\r\n                    return rad + conn;\r\n            }\r\n            else if (label === 'Sb' || label === 'Bi' || label === 'As') {\r\n                if (charge === 1)\r\n                    return rad + conn;\r\n                else if (charge === 2)\r\n                    return rad + conn;\r\n            }\r\n        }\r\n        else if (groupno === 6) {\r\n            if (label === 'O') {\r\n                if (charge >= 1)\r\n                    return rad + conn;\r\n            }\r\n            else if (label === 'S' || label === 'Se' || label === 'Po') {\r\n                if (charge === 1)\r\n                    return rad + conn;\r\n            }\r\n        }\r\n        else if (groupno === 7) {\r\n            if (label === 'Cl' || label === 'Br' || label === 'I' || label === 'At') {\r\n                if (charge === 1)\r\n                    return rad + conn;\r\n            }\r\n        }\r\n        return rad + conn + Math.abs(charge);\r\n    }\r\n}\r\n//# sourceMappingURL=atom.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/atomList.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/vec2.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/constants/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/pile.ts"],"map":"{\"version\":3,\"file\":\"atom.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/domain/entities/atom.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/domain/entities/atom.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AtomList, AtomListParams } from './atomList';\r\nimport { Point, Vec2 } from './vec2';\r\nimport { Pile } from './pile';\r\nexport declare function radicalElectrons(radical: any): 0 | 1 | 2;\r\nexport declare enum StereoLabel {\r\n    Abs = \"abs\",\r\n    And = \"&\",\r\n    Or = \"or\"\r\n}\r\nexport interface AtomAttributes {\r\n    stereoParity?: number;\r\n    stereoLabel?: string | null;\r\n    exactChangeFlag?: number;\r\n    rxnFragmentType?: number;\r\n    invRet?: number;\r\n    aam?: number;\r\n    hCount?: number;\r\n    unsaturatedAtom?: number;\r\n    substitutionCount?: number;\r\n    ringBondCount?: number;\r\n    explicitValence?: number;\r\n    attpnt?: any;\r\n    rglabel?: string | null;\r\n    charge?: number;\r\n    radical?: number;\r\n    isotope?: number;\r\n    alias?: string | null;\r\n    pseudo?: string;\r\n    atomList?: AtomListParams | null;\r\n    label: string;\r\n    fragment?: number;\r\n    pp?: Point;\r\n    implicitH?: number;\r\n}\r\nexport declare class Atom {\r\n    static PATTERN: {\r\n        RADICAL: {\r\n            NONE: number;\r\n            SINGLET: number;\r\n            DOUPLET: number;\r\n            TRIPLET: number;\r\n        };\r\n        STEREO_PARITY: {\r\n            NONE: number;\r\n            ODD: number;\r\n            EVEN: number;\r\n            EITHER: number;\r\n        };\r\n    };\r\n    static attrlist: {\r\n        alias: null;\r\n        label: string;\r\n        isotope: number;\r\n        radical: number;\r\n        charge: number;\r\n        explicitValence: number;\r\n        ringBondCount: number;\r\n        substitutionCount: number;\r\n        unsaturatedAtom: number;\r\n        hCount: number;\r\n        atomList: null;\r\n        invRet: number;\r\n        exactChangeFlag: number;\r\n        rglabel: null;\r\n        attpnt: null;\r\n        aam: number;\r\n        stereoLabel: null;\r\n        stereoParity: number;\r\n    };\r\n    label: string;\r\n    fragment: number;\r\n    atomList: AtomList | null;\r\n    attpnt: any;\r\n    isotope: number;\r\n    hCount: number;\r\n    radical: number;\r\n    charge: number;\r\n    explicitValence: number;\r\n    ringBondCount: number;\r\n    unsaturatedAtom: number;\r\n    substitutionCount: number;\r\n    valence: number;\r\n    implicitH: number;\r\n    pp: Vec2;\r\n    neighbors: Array<number>;\r\n    sgs: Pile<number>;\r\n    badConn: boolean;\r\n    alias: string | null;\r\n    rglabel: string | null;\r\n    aam: number;\r\n    invRet: number;\r\n    exactChangeFlag: number;\r\n    rxnFragmentType: number;\r\n    stereoLabel?: string | null;\r\n    stereoParity: number;\r\n    hasImplicitH?: boolean;\r\n    pseudo: string;\r\n    constructor(attributes: AtomAttributes);\r\n    static getAttrHash(atom: Atom): any;\r\n    static attrGetDefault(attr: string): any;\r\n    clone(fidMap: Map<number, number>): Atom;\r\n    isQuery(): boolean;\r\n    pureHydrogen(): boolean;\r\n    isPlainCarbon(): boolean;\r\n    isPseudo(): boolean;\r\n    hasRxnProps(): boolean;\r\n    calcValence(conn: number): boolean;\r\n    calcValenceMinusHyd(conn: number): number;\r\n}\r\n"}}

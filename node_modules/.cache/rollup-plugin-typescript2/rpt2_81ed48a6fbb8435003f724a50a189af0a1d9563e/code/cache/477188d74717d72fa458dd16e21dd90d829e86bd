{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { FormatterFactory } from \"./formatters\";\r\nimport { Ketcher } from './ketcher';\r\nimport assert from 'assert';\r\nexport const DefaultStructServiceOptions = {\r\n    'smart-layout': true,\r\n    'ignore-stereochemistry-errors': true,\r\n    'mass-skip-error-on-pseudoatoms': false,\r\n    'gross-formula-add-rsites': true,\r\n    'aromatize-skip-superatoms': true,\r\n    'dearomatize-on-load': false,\r\n    'ignore-no-chiral-flag': false\r\n};\r\nexport class KetcherBuilder {\r\n    #structServiceProvider;\r\n    withStructServiceProvider(structServiceProvider) {\r\n        this.#structServiceProvider = structServiceProvider;\r\n        return this;\r\n    }\r\n    build(editor, serviceOptions) {\r\n        assert(editor != null);\r\n        assert(this.#structServiceProvider != null);\r\n        const mergedServiceOptions = {\r\n            ...DefaultStructServiceOptions,\r\n            ...serviceOptions\r\n        };\r\n        const structService = this.#structServiceProvider.createStructService(mergedServiceOptions);\r\n        const ketcher = new Ketcher(editor, structService, new FormatterFactory(structService));\r\n        ketcher[this.#structServiceProvider.mode] = true;\r\n        return ketcher;\r\n    }\r\n}\r\n//# sourceMappingURL=ketcherBuilder.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/services/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/formatters/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/ketcher.ts","/usr/local/google/home/waich/workspace/ketcher/node_modules/assert/build/assert.js"],"map":"{\"version\":3,\"file\":\"ketcherBuilder.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/application/ketcherBuilder.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAS7E,OAAO,EAAE,gBAAgB,EAAE,qBAA8B;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,MAAM,MAAM,QAAQ,CAAA;AAE3B,MAAM,CAAC,MAAM,2BAA2B,GAAG;IACzC,cAAc,EAAE,IAAI;IACpB,+BAA+B,EAAE,IAAI;IACrC,gCAAgC,EAAE,KAAK;IACvC,0BAA0B,EAAE,IAAI;IAChC,2BAA2B,EAAE,IAAI;IACjC,qBAAqB,EAAE,KAAK;IAC5B,uBAAuB,EAAE,KAAK;CAC/B,CAAA;AAED,MAAM,OAAO,cAAc;IACzB,sBAAsB,CAAwB;IAE9C,yBAAyB,CACvB,qBAA4C;QAE5C,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAA;QACnD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,KAAK,CAAC,MAAc,EAAE,cAAqC;QACzD,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,CAAA;QACtB,MAAM,CAAC,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,CAAA;QAE3C,MAAM,oBAAoB,GAAyB;YACjD,GAAG,2BAA2B;YAC9B,GAAG,cAAc;SAClB,CAAA;QACD,MAAM,aAAa,GACjB,IAAI,CAAC,sBAAuB,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAA;QACxE,MAAM,OAAO,GAAG,IAAI,OAAO,CACzB,MAAM,EACN,aAAa,EACb,IAAI,gBAAgB,CAAC,aAAa,CAAC,CACpC,CAAA;QACD,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;QAEhD,OAAO,OAAO,CAAA;IAChB,CAAC;CACF\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/ketcherBuilder.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { StructServiceOptions, StructServiceProvider } from \"../domain/services\";\r\nimport { Editor } from \"./editor\";\r\nimport { Ketcher } from './ketcher';\r\nexport declare const DefaultStructServiceOptions: {\r\n    'smart-layout': boolean;\r\n    'ignore-stereochemistry-errors': boolean;\r\n    'mass-skip-error-on-pseudoatoms': boolean;\r\n    'gross-formula-add-rsites': boolean;\r\n    'aromatize-skip-superatoms': boolean;\r\n    'dearomatize-on-load': boolean;\r\n    'ignore-no-chiral-flag': boolean;\r\n};\r\nexport declare class KetcherBuilder {\r\n    #private;\r\n    withStructServiceProvider(structServiceProvider: StructServiceProvider): KetcherBuilder;\r\n    build(editor: Editor, serviceOptions?: StructServiceOptions): Ketcher;\r\n}\r\n"}}

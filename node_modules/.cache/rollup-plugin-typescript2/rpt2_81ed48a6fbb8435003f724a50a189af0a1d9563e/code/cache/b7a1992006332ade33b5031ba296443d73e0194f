{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Bond, Vec2 } from \"../../../domain/entities\";\r\nimport closest from '../shared/closest';\r\nimport { difference } from 'lodash';\r\nexport function atomGetAttr(restruct, aid, name) {\r\n    return restruct.molecule.atoms.get(aid)[name];\r\n}\r\nexport function atomGetDegree(restruct, aid) {\r\n    return restruct.atoms.get(aid).a.neighbors.length;\r\n}\r\nexport function atomGetSGroups(restruct, aid) {\r\n    return Array.from(restruct.atoms.get(aid).a.sgs);\r\n}\r\nexport function atomGetPos(restruct, id) {\r\n    return restruct.molecule.atoms.get(id).pp;\r\n}\r\nexport function findStereoAtoms(struct, aids) {\r\n    return aids.filter((aid) => struct.atoms.get(aid).stereoLabel !== null);\r\n}\r\nexport function structSelection(struct) {\r\n    return [\r\n        'atoms',\r\n        'bonds',\r\n        'frags',\r\n        'sgroups',\r\n        'rgroups',\r\n        'rxnArrows',\r\n        'rxnPluses',\r\n        'simpleObjects',\r\n        'texts'\r\n    ].reduce((res, key) => {\r\n        res[key] = Array.from(struct[key].keys());\r\n        return res;\r\n    }, {});\r\n}\r\n// Get new atom id/label and pos for bond being added to existing atom\r\nexport function atomForNewBond(restruct, id, bond) {\r\n    // eslint-disable-line max-statements\r\n    const neighbours = [];\r\n    const pos = atomGetPos(restruct, id);\r\n    const atomNeighbours = restruct.molecule.atomGetNeighbors(id);\r\n    const prevBondId = restruct.molecule.findBondId(id, atomNeighbours.length ? atomNeighbours[0]?.aid : undefined);\r\n    const prevBond = restruct.molecule.bonds.get(prevBondId);\r\n    const prevBondType = prevBond ? prevBond.type : bond ? bond.type : 1;\r\n    restruct.molecule.atomGetNeighbors(id).forEach((nei) => {\r\n        const neiPos = atomGetPos(restruct, nei.aid);\r\n        if (Vec2.dist(pos, neiPos) < 0.1)\r\n            return;\r\n        neighbours.push({ id: nei.aid, v: Vec2.diff(neiPos, pos) });\r\n    });\r\n    neighbours.sort((nei1, nei2) => Math.atan2(nei1.v.y, nei1.v.x) - Math.atan2(nei2.v.y, nei2.v.x));\r\n    let i;\r\n    let maxI = 0;\r\n    let angle;\r\n    let maxAngle = 0;\r\n    // TODO: impove layout: tree, ...\r\n    for (i = 0; i < neighbours.length; i++) {\r\n        angle = Vec2.angle(neighbours[i].v, neighbours[(i + 1) % neighbours.length].v);\r\n        if (angle < 0)\r\n            angle += 2 * Math.PI;\r\n        if (angle > maxAngle) {\r\n            maxI = i;\r\n            maxAngle = angle;\r\n        }\r\n    }\r\n    let v = new Vec2(1, 0);\r\n    if (neighbours.length > 0) {\r\n        if (neighbours.length === 1) {\r\n            maxAngle = -((4 * Math.PI) / 3);\r\n            // zig-zag\r\n            const nei = restruct.molecule.atomGetNeighbors(id)[0];\r\n            if (atomGetDegree(restruct, nei.aid) > 1) {\r\n                const neiNeighbours = [];\r\n                const neiPos = atomGetPos(restruct, nei.aid);\r\n                const neiV = Vec2.diff(pos, neiPos);\r\n                const neiAngle = Math.atan2(neiV.y, neiV.x);\r\n                restruct.molecule.atomGetNeighbors(nei.aid).forEach((neiNei) => {\r\n                    const neiNeiPos = atomGetPos(restruct, neiNei.aid);\r\n                    if (neiNei.bid === nei.bid || Vec2.dist(neiPos, neiNeiPos) < 0.1) {\r\n                        return;\r\n                    }\r\n                    const vDiff = Vec2.diff(neiNeiPos, neiPos);\r\n                    let ang = Math.atan2(vDiff.y, vDiff.x) - neiAngle;\r\n                    if (ang < 0)\r\n                        ang += 2 * Math.PI;\r\n                    neiNeighbours.push(ang);\r\n                });\r\n                neiNeighbours.sort((nei1, nei2) => nei1 - nei2);\r\n                if (neiNeighbours[0] <= Math.PI * 1.01 &&\r\n                    neiNeighbours[neiNeighbours.length - 1] <= 1.01 * Math.PI) {\r\n                    maxAngle *= -1;\r\n                }\r\n            }\r\n        }\r\n        const shallBe180DegToPrevBond = (neighbours.length === 1 &&\r\n            prevBondType === bond?.type &&\r\n            (bond?.type === Bond.PATTERN.TYPE.DOUBLE ||\r\n                bond?.type === Bond.PATTERN.TYPE.TRIPLE)) ||\r\n            (prevBondType === Bond.PATTERN.TYPE.SINGLE &&\r\n                bond?.type === Bond.PATTERN.TYPE.TRIPLE) ||\r\n            (prevBondType === Bond.PATTERN.TYPE.TRIPLE &&\r\n                bond?.type === Bond.PATTERN.TYPE.SINGLE);\r\n        if (shallBe180DegToPrevBond) {\r\n            const prevBondAngle = restruct.molecule.bonds.get(prevBondId).angle;\r\n            if (prevBondAngle > -90 && prevBondAngle < 90 && neighbours[0].v.x > 0) {\r\n                angle = (prevBondAngle * Math.PI) / 180 + Math.PI;\r\n            }\r\n            else {\r\n                angle = (prevBondAngle * Math.PI) / 180;\r\n            }\r\n        }\r\n        else {\r\n            angle =\r\n                maxAngle / 2 + Math.atan2(neighbours[maxI].v.y, neighbours[maxI].v.x);\r\n        }\r\n        v = v.rotate(angle);\r\n    }\r\n    v.add_(pos); // eslint-disable-line no-underscore-dangle\r\n    let a = closest.atom(restruct, v, null, 0.1);\r\n    a = a === null ? { label: 'C' } : a.id;\r\n    return { atom: a, pos: v };\r\n}\r\nexport function getRelSgroupsBySelection(restruct, selectedAtoms) {\r\n    return restruct.molecule.sgroups.filter((_sgid, sg) => !sg.data.attached &&\r\n        !sg.data.absolute &&\r\n        difference(sg.atoms, selectedAtoms).length === 0);\r\n}\r\nexport function isAttachmentBond({ begin, end }, selection) {\r\n    if (!selection.atoms) {\r\n        return false;\r\n    }\r\n    const isBondStartsInSelectionAndEndsOutside = selection.atoms.includes(begin) && !selection.atoms.includes(end);\r\n    const isBondEndsInSelectionAndStartsOutside = selection.atoms.includes(end) && !selection.atoms.includes(begin);\r\n    return (isBondStartsInSelectionAndEndsOutside ||\r\n        isBondEndsInSelectionAndStartsOutside);\r\n}\r\n//# sourceMappingURL=utils.js.map","references":["/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/domain/entities/index.ts","/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/src/application/editor/shared/closest.js","/usr/local/google/home/waich/workspace/ketcher/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/application/editor/actions/utils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/waich/workspace/ketcher/packages/ketcher-core/node_modules/.cache/rollup-plugin-typescript2/placeholder/application/editor/actions/utils.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Bond, Vec2 } from \"../../../domain/entities\";\r\nexport declare function atomGetAttr(restruct: any, aid: any, name: any): any;\r\nexport declare function atomGetDegree(restruct: any, aid: any): any;\r\nexport declare function atomGetSGroups(restruct: any, aid: any): unknown[];\r\nexport declare function atomGetPos(restruct: any, id: any): any;\r\nexport declare function findStereoAtoms(struct: any, aids: any): any;\r\nexport declare function structSelection(struct: any): {};\r\nexport declare function atomForNewBond(restruct: any, id: any, bond?: any): {\r\n    atom: any;\r\n    pos: Vec2;\r\n};\r\nexport declare function getRelSgroupsBySelection(restruct: any, selectedAtoms: any): any;\r\nexport declare function isAttachmentBond({ begin, end }: Bond, selection: any): boolean;\r\n"}}
